[{"content":"方法一\n修改 redis 設定檔 (requirepass 參數) PWD: /usr/local/redis/etc/redis.conf 修改完之後重啟服務 service redis restart 方法二\n進服務修改 Password (此方法 Redis 重啟後，密碼會失效) # 設定密碼 127.0.0.1:6379\u0026gt; config set requirepass 123456 # 查詢密碼 127.0.0.1:6379\u0026gt; config get requirepass # 驗證密碼 127.0.0.1:6379\u0026gt; auth 123456 127.0.0.1:6379\u0026gt; config get requirepass 1) \u0026quot;requirepass\u0026quot; 2) \u0026quot;123456\u0026quot; 登入指令\nredis-cli -p 6379 -a test123 redis 127.0.0.1:6379\u0026gt; auth test123 ","date":"2022-10-13T00:00:00Z","image":"https://note.laurance.ml/p/redis-%E8%A8%AD%E7%BD%AEredis%E5%AF%86%E7%A2%BC/100_hu74f8d656a97bc6b7ca99b23e97f954a2_40393_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/redis-%E8%A8%AD%E7%BD%AEredis%E5%AF%86%E7%A2%BC/","title":"Redis-設置Redis密碼"},{"content":"查看 namespace\nkubectl get ns 查看 kubernetes-dashboard 的 namespace\nkubectl get ns kubernetes-dashboard -o json \u0026gt; kubernetes-dashboard.json 編輯 kubernetes-dashboard.json 檔\nvim kubernetes-dashboard.json 刪除前\n刪除後\n重新掛起 Proxy\nkubectl proxy --address='0.0.0.0' \u0026amp; curl刪除\ncurl -k -H \u0026quot;Content-Type:application/json\u0026quot; -X PUT --data-binary @kubernetes-dashboard.json http://127.0.0.1:8001/api/v1/namespaces/kubernetes-dashboard/finalize kubernetes-dashboard 已刪除\n","date":"2022-10-12T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-error-unable-to-create-new-content-is-being-terminated/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-error-unable-to-create-new-content-is-being-terminated/","title":"Kubernetes-ERROR-unable to create new content is being terminated"},{"content":"Docker file包製作\nmkdir dockerfile/ \u0026amp;\u0026amp; cd dockerfile/ vim Dockerfile 1 2 3 4 5 6 7 8 #/bin/bash FROM nginx ARG HTML #Change nginx config RUN rm /usr/share/nginx/html/index.html COPY ./$HTML /usr/share/nginx/html/index.html vim green.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=utf-8\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body style=\u0026#34;background-color: green; color:#fff\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;2022/10/12 ---Ingress-test\u0026lt;/h1\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Author\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;: Laurance\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Article Link\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;: \u0026lt;a href=\u0026#34;https://note.laurance.ml\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;2022/10/12 ---Ingress-test\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Topic\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;: \u0026lt;a href=\u0026#34;https://note.laurance.ml\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;2022/10/12 ---Ingress-test\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; vim red.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=utf-8\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body style=\u0026#34;background-color: red; color:#fff\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;2022/10/12 ---Ingress-test\u0026lt;/h1\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Author\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;: Laurance\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Article Link\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;: \u0026lt;a href=\u0026#34;https://note.laurance.ml\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;2022/10/12 ---Ingress-test\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Topic\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;: \u0026lt;a href=\u0026#34;https://note.laurance.ml\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;2022/10/12 ---Ingress-test\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 使用 docker build 建立 image 1 2 3 4 5 $ docker build --build-arg HTML=green.html -t laurance/green . $ docker build --build-arg HTML=red.html -t laurance/red . 更改 TAG 名稱為 docker 用戶名 / image 名稱 1 2 3 4 $ docker tag laurance/red ihatemis/red $ docker tag laurance/green ihatemis/green 上傳至 Docker hub ，需要先 docker login 1 2 3 4 $ docker push ihatemis/red:latest $ docker push ihatemis/green:latest Deplyment\nvim ingress.deployment.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #apiVersion: extensions/v1beta1 apiVersion: apps/v1 kind: Deployment metadata: name: red-nginx namespace: simple2 spec: selector: matchLabels: app: red-nginx replicas: 4 template: metadata: labels: app: red-nginx spec: containers: - name: nginx image: ihatemis/red:latest ports: - containerPort: 80 --- #apiVersion: extensions/v1beta1 apiVersion: apps/v1 kind: Deployment metadata: name: green-nginx namespace: simple2 spec: selector: matchLabels: app: green-nginx replicas: 2 template: metadata: labels: app: green-nginx spec: containers: - name: nginx image: ihatemis/green:latest ports: - containerPort: 80 kubectl apply -f ingress.deployment.yaml service\nvim ingress.service.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 apiVersion: v1 kind: Service metadata: name: green-service namespace: simple2 spec: type: NodePort selector: app: green-nginx ports: - protocol: TCP port: 80 --- apiVersion: v1 kind: Service metadata: name: red-service namespace: simple2 spec: type: NodePort selector: app: red-nginx ports: - protocol: TCP port: 80 kubectl apply -f ingress.service.yaml Ingress\nvim ingress.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #apiVersion: extensions/v1beta1 apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: web namespace: simple2 annotations: nginx.ingress.kubernetes.io/rewrite-target: / spec: rules: - host: green.ingress.com http: paths: - path: / pathType: Prefix backend: service: name: green-service port: number: 80 - host: red.ingress.com http: paths: - path: / pathType: Prefix backend: service: name: red-service port: number: 80 kubectl apply -f ingress.yaml 將域名綁至 HOSTS\n172.16.0.223 red.ingress.com green.ingress.com 訪問 http://red.ingress.com\n訪問 http://green.ingress.com\n","date":"2022-10-12T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-ingress/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-ingress/","title":"Kubernetes-Ingress"},{"content":"dashboard 出現以下畫面\n查看 dashboard pod 的 LOG\n1 2 # kubectl get pods -n kube-system|grep dash kubernetes-dashboard-6ff6454fdc-78fnx 1/1 Running 0 4h8m K8s LOG 報錯 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds\n原因: kubernets用的比较高的版本，但dashboard版本用的比较低，因此報錯\n解決: 重新安裝 dashboard 版本\n先將舊的版本刪除 (將 dashboard 的 NS 刪除即可) 1 kubectl delete ns kubernetes-dashboard 查看 kubernetes 版本 1 2 3 4 5 $ kubectl version --short Flag --short has been deprecated, and will be removed in the future. The --short output will become the default. Client Version: v1.25.2 Kustomize Version: v4.5.7 Server Version: v1.25.0 根據 kubernetes 版本 下載相對應的 dashboard 版本 下載網址\n1 2 3 4 5 6 7 8 9 10 11 12 dashboard v2.0.0-beta5 —\u0026gt; kubernetes 1.16 dashboard v2.0.0 —\u0026gt; kubernetes 1.18 dashboard v2.0.1 —\u0026gt; kubernetes 1.18 dashboard v2.0.2 —\u0026gt; kubernetes 1.18 dashboard v2.0.3 —\u0026gt; kubernetes 1.18 dashboard v2.0.4 —\u0026gt; kubernetes 1.19 dashboard v2.0.5 —\u0026gt; kubernetes 1.19 dashboard v2.1.0 —\u0026gt; kubernetes 1.20 dashboard v2.2.0 —\u0026gt; kubernetes 1.20 dashboard v2.3.0 —\u0026gt; kubernetes 1.21 dashboard v2.3.1 —\u0026gt; kubernetes 1.21 wget 下來修改 Service 的部分 1 wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml 修改為 Nodeport 方式訪問 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 kind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: type: NodePort #新添加的 ports: - port: 443 targetPort: 8443 nodePort: 30003 #新添加的（可以改成其它的端口号，要大于30000） selector: k8s-app: kubernetes-dashboard --- 執行 yaml 文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # kubectl apply -f recommended.yaml namespace/kubernetes-dashboard created serviceaccount/kubernetes-dashboard created service/kubernetes-dashboard created secret/kubernetes-dashboard-certs created secret/kubernetes-dashboard-csrf created secret/kubernetes-dashboard-key-holder created configmap/kubernetes-dashboard-settings created role.rbac.authorization.k8s.io/kubernetes-dashboard created clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created deployment.apps/kubernetes-dashboard created service/dashboard-metrics-scraper created deployment.apps/dashboard-metrics-scraper created 建立 dashboard 管理員 vim dashboard-admin.yaml kubectl create -f dashboard-admin.yaml 1 2 3 4 5 6 7 8 apiVersion: v1 kind: ServiceAccount metadata: labels: k8s-app: kubernetes-dashboard name: dashboard-admin namespace: kubernetes-dashboard 建立 RBAC 分配權限 vim dashboard-admin-role.yaml kubectl create -f dashboard-admin-role.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: dashboard-admin-role labels: k8s-app: kubernetes-dashboard roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: dashboard-admin namespace: kubernetes-dashboard kubectl get secret -n kubernetes-dashboard 1 2 3 4 5 6 7 NAME TYPE DATA AGE dashboard-admin-token-fj9v6 kubernetes.io/service-account-token 3 95s default-token-lj7xg kubernetes.io/service-account-token 3 33m kubernetes-dashboard-certs Opaque 0 33m kubernetes-dashboard-csrf Opaque 1 33m kubernetes-dashboard-key-holder Opaque 2 33m kubernetes-dashboard-token-cdkzc kubernetes.io/service-account-token 3 33m dashboard-admin-token 是剛剛創建的，再篩出 TOKEN 即可 1 2 kubectl describe -n kubernetes-dashboard secret/dashboard-admin-token-fj9v6|grep token: token: eyJhbGciOiJSUzI1NiIsImtpZCI6ImJyYjJDR18tMDQtdkc3MzBBN0RwQU8zTlVjV01PM2w0dGRBWVh5UXhPN3MifQ.eyJpc3MiOiJrdWJlcm5ldGVz 輸入 https://172.16.0.223:30003 即可訪問 Dashboard ， 並輸入剛剛篩出的 TOKEN ","date":"2022-10-10T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-error-metric-client-health-check-failed/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-error-metric-client-health-check-failed/","title":"Kubernetes-ERROR-Metric client health check failed"},{"content":"從cri-dockerd GitHub 頁面下載適當的二進制包\n$ wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz 解壓縮包\n$ tar xvf cri-dockerd-v0.2.0-linux-amd64.tar.gz 將 cri-dockerd 二進製文件移動到 usr/local/bin 目錄\nmv ./cri-dockerd /usr/local/bin/ 配置 systemd\n$ wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.service $ wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.socket $ mv cri-docker.socket cri-docker.service /etc/systemd/system/ $ sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service 啟用 cri-dockerd\n$ systemctl daemon-reload $ systemctl enable cri-docker.service $ systemctl enable --now cri-docker.socket 驗證該服務是否正在運行\n$ systemctl status cri-docker.socket ","date":"2022-10-10T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-install-cri-dockerd-on-linux/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-install-cri-dockerd-on-linux/","title":"Kubernetes-install cri-dockerd on Linux"},{"content":"安装 LENS on Windows x64\nLENS 官方載點\n右上三條線點選 File \u0026raquo; Add Cluster 新增集群\n回到測試機上查看 minikube 設定檔\nkubectl config view 將測試機裡的 .minikube 隱藏檔資料夾 winscp 取出放到對應位置\nPWD: /root/.minikube 將測試機裡的 .kube 隱藏檔資料夾 winscp 取出放到對應位置，並修改路徑\nPWD: /root/.kube 將 .kube 下的 config 內容貼至 LENS \u0026raquo; File \u0026raquo; Add Cluster 新增集群\n雙擊連接即可\n","date":"2022-10-10T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-lens-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97-%E9%80%9A%E9%81%8E-ide-%E7%AE%A1%E7%90%86-minikube/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-lens-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97-%E9%80%9A%E9%81%8E-ide-%E7%AE%A1%E7%90%86-minikube/","title":"Kubernetes-Lens 使用指南 通過 IDE 管理 minikube"},{"content":" Github Kubernetes Dashboard 這裡記錄一下安裝的過程\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml 這樣就安裝好了，然後看一下正在運行的容器\nkubectl get all -n kube-system -l k8s-app=kubernetes-dashboard 先把Iptables規則打開 (預設FORWARD是關閉的)\niptables -P FORWARD ACCEPT 確認火牆都關閉 firewalld \u0026amp;\u0026amp; selinux\nsystemctl stop firewalld getenforce \u0026gt;\u0026gt; disabled 設置一層代理讓外部訪問 dashboard\nkubectl proxy --address='0.0.0.0' --disable-filter=true \u0026amp; PS. disable-filter=true表示禁用請求過濾功能，否則我們的請求會被拒絕，並提示 Forbidden (403) Unauthorized 訪問 dashboard\nhttp://172.16.0.223:8001/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/service?namespace=default ","date":"2022-10-10T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-%E5%9C%A8%E6%9C%AC%E5%9C%B0%E7%AB%AF%E4%B8%8A%E5%BB%BA%E7%AB%8B-dashboard/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-%E5%9C%A8%E6%9C%AC%E5%9C%B0%E7%AB%AF%E4%B8%8A%E5%BB%BA%E7%AB%8B-dashboard/","title":"Kubernetes-在本地端上建立 Dashboard"},{"content":"取得所有 Pods 的資訊\nkubectl get pods -o wide 取得某 Pod 的詳細資料\nkubectl describe pod \u0026lt;pod Name\u0026gt; 修改 Pods 的資訊\nkubectl edit pods -n \u0026lt;namespace\u0026gt; \u0026lt;pod Name\u0026gt; 查看 Pods 事件\nkubectl describe pod \u0026lt;pod Name\u0026gt; 查看 Pods 日志文件\nkubectl logs -f \u0026lt;pod Name\u0026gt; 刪除這個 pod\nkubectl delete -f pod-demo.yaml 使用 yaml 創建 Pods\nkubectl apply -f laurance-test.yaml 進入 Pods 內部\nkubectl exec -it \u0026lt;pod Name\u0026gt; /bin/bash 查看各節點狀態\nkubectl get node \u0026lt;node name\u0026gt; 查看各節點事件\nkubectl describe node \u0026lt;node name\u0026gt; 查看系统 Kubelet 日志 1000行\njournalctl -l -u kubelet -n 1000 將 YAML 導出\nkubectl get service \u0026lt;serviceName\u0026gt; -o yaml \u0026gt; backup.yaml 檢查叢集狀態\nkubectl get all ","date":"2022-10-10T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-%E5%B8%B8%E8%A6%8B-kubectl-%E6%8C%87%E4%BB%A4/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-%E5%B8%B8%E8%A6%8B-kubectl-%E6%8C%87%E4%BB%A4/","title":"Kubernetes-常見 kubectl 指令"},{"content":"插件列表\nminikube addons list 插件啟用\nminikube addons enable ADDON_NAME 插件禁用\nminikube addons disable ADDON_NAME 不使用任何驅動開啟集群\nminikube start --driver=none 停止集群\nminikube stop 删除集群\nminikube delete 不影响已部署应用情况下暂停 Kubernetes\nminikube pause 取消暂停的instance\nminikube unpause 增加默认内存限制（需重启）\nminikube config set memory 16384 各節點操作\nminikube node [add|start|stop|delete|list] 額外啟動參數\n--image-mirror-country=cn # 镜像所在国家 --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers # 镜像仓库地址 --cpus=2 # 设置minikube虚拟机分配CPU核数 --memory=2000mb # 设置minikube虚拟机分配内存 --kubernetes-version=version # 使用的kubernetes版本 --docker-env http_proxy=http://IP:7890 http_proxy=https://IP:7890 # minikube虚拟机内部docker使用代理地址 # 指定驱动 --vm-driver=none 在主机上运行Kubernetes组件，而不是在VM中,该方式驱动依赖Docker --vm-driver=virtualbox 表示用虚拟机,默认 PS. 不通过\u0026ndash;vm-driver=none参数启动，则创建的Pod、Service均不能通过外网访问，只能minikube ssh 进入集群访问操作\n參考文獻\n","date":"2022-10-10T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-%E5%B8%B8%E8%A6%8B-minikube-%E6%8C%87%E4%BB%A4/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-%E5%B8%B8%E8%A6%8B-minikube-%E6%8C%87%E4%BB%A4/","title":"Kubernetes-常見 minikube 指令"},{"content":"下載安裝包\nsudo curl -L \u0026quot;https://github.com/docker/compose/releases/download/1.27.1/docker-compose-$(uname -s)-$(uname -m)\u0026quot; -o /usr/local/bin/docker-compose 對二進製文件應用可執行權限\nsudo chmod +x /usr/local/bin/docker-compose 創建指向 /usr/bin 或路徑中任何其他目錄的符號鏈接\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose 測試 docker-compose\ndocker-compose --version ","date":"2022-10-06T00:00:00Z","image":"https://note.laurance.ml/p/docker-install-docker-compose/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-install-docker-compose/","title":"Docker-Install docker-compose"},{"content":"GCP上，點選硬盤，直接修改想要的硬盤大小(只能擴大、不能縮小) 看一下目前的硬碟空間 lsblk 會發現從 1.3T 變成 1.5T，但是用 df -h 卻沒看到空間增加 擴大分割區\n以下是針對 sda 的第一個分割區擴大\nyum install cloud-utils-growpart growpart /dev/sda 2 擴大檔案系統空間\n如果是 ext2, ext3, ext4 的 file system，則用 resize2fs，如果是 xfs，則用 xfs_growfs\nxfs xfs_growfs /dev/sda2 ext4 resize2fs /dev/sda2 ","date":"2022-10-06T00:00:00Z","image":"https://note.laurance.ml/p/gcp-%E7%A1%AC%E7%A2%9F%E6%93%B4%E5%AE%B9/100_hu955ca03f846527c7d15132e3291bde7f_39307_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/gcp-%E7%A1%AC%E7%A2%9F%E6%93%B4%E5%AE%B9/","title":"GCP-硬碟擴容"},{"content":"(1) 在 Linux 上安裝帶有 curl 的 kubectl 二進位檔 (最新)\ncurl -LO \u0026quot;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\u0026quot; 注意： 要下載特定版本，請將命令部分替換為特定版本。 $(curl -L -s https://dl.k8s.io/release/stable.txt)\n例如，要在Linux上下載 v1.25.0 版本，請鍵入：\ncurl -LO https://dl.k8s.io/release/v1.25.0/bin/linux/amd64/kubectl (2) 驗證二進位檔 (選擇)\n下載 kubectl 校驗和檔：\ncurl -LO \u0026quot;https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256\u0026quot; 根據校驗和文件驗證 kubectl 二進位檔：\necho \u0026quot;$(cat kubectl.sha256) kubectl\u0026quot; | sha256sum --check 如果有效，則輸出為：\nkubectl: OK 如果檢查失敗，則以非零狀態退出並列印類似於以下內容的輸出：sha256\nkubectl: FAILED sha256sum: WARNING: 1 computed checksum did NOT match 注意：下載相同版本的二進位檔和校驗和。\n(3) 安裝 kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl 注意：\n如果您在目標系統上沒有根訪問許可權，您仍然可以將 kubectl 安裝到該目錄：~/.local/bin\nchmod +x kubectl mkdir -p ~/.local/bin mv ./kubectl ~/.local/bin/kubectl # and then append (or prepend) ~/.local/bin to $PATH (4) 測試以確保您安裝的版本是最新的：\nkubectl version --client 或者使用以下內容檢視：\nkubectl version --client --output=yaml ","date":"2022-10-06T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-install-and-set-up-kubectl-on-linux/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-install-and-set-up-kubectl-on-linux/","title":"Kubernetes-Install and Set Up kubectl on Linux"},{"content":"新增官方YUM源\ncat \u0026lt;\u0026lt;EOF | sudo tee /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\\$basearch enabled=1 gpgcheck=1 gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg EOF 使用YUM安裝\nsudo yum install -y kubectl kubelet kubeadm 開機啟動\nsystemctl enable kubelet ","date":"2022-10-06T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-install-kubectl-on-linux-by-yum/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-install-kubectl-on-linux-by-yum/","title":"Kubernetes-Install kubectl on Linux by yum"},{"content":"PS:安装Minikube 之前需要先把docker安装好\n依賴\nyum install conntrack 官方載點\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube 啟動集群\nminikube start --driver=none 啟動時想要指定resource\nminikube start --cpus=4 --memory=4096 ","date":"2022-10-06T00:00:00Z","image":"https://note.laurance.ml/p/kubernetes-install-minikube-on-linux/100_hu011eff4eb1029f53348717cab0d2cf5f_19415_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/kubernetes-install-minikube-on-linux/","title":"Kubernetes-install minikube on Linux"},{"content":"wget https://archive.apache.org/dist/subversion/subversion-1.6.12.tar.gz yum install apr* yum install sqlite ./configure --prefix=/usr/local/svn --without-berkeley-db make \u0026amp;\u0026amp; make install 啟動 svnserve: svnserve -d adduser svn passwd svn 建立資料庫 svnadmin create /home/svn/project/ 增加使用者與密碼 vim /home/svn/project/conf/passwd [users] XXX=XXX ","date":"2022-10-06T00:00:00Z","image":"https://note.laurance.ml/p/svn-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8-centos7/100_hu94ffa1f3b0268ddc6594e8f513862b5b_33594_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/svn-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8-centos7/","title":"SVN-安裝教學 (CentOS7)"},{"content":"SVN送交時失敗跳error \u0026quot;你必須先更新你的工作副本\u0026quot; 按確定之後，會自動跳出 作業失敗-請先更新的視窗，再點選更新即可 ","date":"2022-10-05T00:00:00Z","image":"https://note.laurance.ml/p/svn-error-%E4%BD%A0%E5%BF%85%E9%A0%88%E5%85%88%E6%9B%B4%E6%96%B0%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%89%AF%E6%9C%AC/100_hu94ffa1f3b0268ddc6594e8f513862b5b_33594_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/svn-error-%E4%BD%A0%E5%BF%85%E9%A0%88%E5%85%88%E6%9B%B4%E6%96%B0%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%89%AF%E6%9C%AC/","title":"SVN-error 你必須先更新你的工作副本"},{"content":"模板機先建立快照 \u0026gt;\u0026gt; 再轉映像檔 區域選台灣 \u0026gt;\u0026gt; 按建立 建立執行個體範本 建立執行個體範本 網路分頁將外部IP 更改成無；勾選允許HTTP、HTTPS流量 建立完畢後 編輯執行個體群組 套用新的 執行個體範本 確認有出現後 再開始進行web滾動更新 GCP ASG-web滾動更新 選擇執行各體群組 \u0026gt; 輪動式重新啟動/取代 點選取代 \u0026gt; 供應過度數量上限填1 \u0026gt; 無法使用的數量寫0 \u0026gt; 取代 PS:供應過度的數量上限: 是指滾動時，可超過當下存在的機器數量的上限 如果原本上限是8台，填1時，滾動時上限可為9台 如果是上班時段，建議填寫目前機器數量，滾動速度會比較快一點 如果是維護其間，可填寫1 讓它慢慢替換 ----------------------------------------------------------------------------------------------------------------- 無法使用的執行個體數量上限: 是指滾動時，群組裡面能有幾台無法使用 這邊不管是上班或是維護期間 都應填寫0 ","date":"2022-10-03T00:00:00Z","image":"https://note.laurance.ml/p/gcp-asg%E5%9F%B7%E8%A1%8C%E7%AF%84%E6%9C%AC%E5%BB%BA%E7%AB%8B%E8%88%87%E6%9B%B4%E6%96%B0/100_hu955ca03f846527c7d15132e3291bde7f_39307_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/gcp-asg%E5%9F%B7%E8%A1%8C%E7%AF%84%E6%9C%AC%E5%BB%BA%E7%AB%8B%E8%88%87%E6%9B%B4%E6%96%B0/","title":"GCP- ASG執行範本建立與更新"},{"content":"Work搜索SSL簽發日期 ps.到期日期往前推一年=簽發日期 2022-06-03 進入SECTIGO後台，並點選訂單管理Gaia Information Technology Corp. Reseller 點選訂單報告Report on Your Orders 以簽發日期查詢訂單編號 用訂單編號搜索憑證更換CSR 進入管理層並點選訂單管理操作 Validation Manager Order Search 輸入剛查詢的訂單編號進入修改 點選修改 Submit your CSR ， 並將CSR黏貼進入，後面一直按CONTINUE即可 憑證簽發完後，Mail會收到Sectigo寄來的zip包 下載後會有4之檔案， 將AAA CertificateServices.crt裡面的內容全部貼進STAR_XXX_net.crt的下面，並更名為域名.crt， 再將域名.crt複製到網頁主機裡 (注意：STAR_XXX_net.crt內容一定要再上方，否則驗證不會過) ","date":"2022-10-03T00:00:00Z","image":"https://note.laurance.ml/p/sectigo-%E6%94%B9%E7%B0%BDssl%E6%95%99%E5%AD%B8/100_hu07570c01234663d05f8d1d92258d9305_51571_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/sectigo-%E6%94%B9%E7%B0%BDssl%E6%95%99%E5%AD%B8/","title":"SECTIGO-改簽SSL教學"},{"content":"先到個人帳號家目錄下的.ssh 製作金鑰 製作完後會有兩支檔案 製作完後將id_rsa.pub 上傳至AWS-IAM個人帳號 上傳後會得到SSH密鑰 ID 將ID複製下來 再回到機器帳號跟目錄下的.ssh vim config Host git-codecommit.ap-northeast-2.amazonaws.com \u0026lt; --只需要地區，目錄不用 User SSH密鑰 ID IdentityFile ~/.ssh/id_rsa \u0026lt;--私鑰檔案路徑 Codecommit的位置取得 新增完成後將檔案權限改為 600 chmod 600 config 即完成設定 ","date":"2022-09-30T00:00:00Z","image":"https://note.laurance.ml/p/aws-codecommit-ssh-%E9%87%91%E9%91%B0%E4%B8%8A%E5%82%B3%E5%8F%8A%E8%A8%AD%E7%BD%AE/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-codecommit-ssh-%E9%87%91%E9%91%B0%E4%B8%8A%E5%82%B3%E5%8F%8A%E8%A8%AD%E7%BD%AE/","title":"AWS-Codecommit SSH 金鑰上傳及設置"},{"content":"REDIS\nwget https://pecl.php.net/get/memcached-3.0.3.tgz tar zxvf memcached-3.0.3.tgz cd memcached-3.0.3 /usr/local/web/php/bin/phpize ./configure -with-php-config=/usr/local/web/php/bin/php-config make \u0026amp;\u0026amp; make install vim /usr/local/php/etc/php.ini extension=memcached.so ","date":"2022-09-30T00:00:00Z","image":"https://note.laurance.ml/p/php-%E5%AE%89%E8%A3%9Dmemcached%E6%93%B4%E5%B1%95/100_hu2ca637fb1d0a70ad637da30e1c6e56b4_46154_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/php-%E5%AE%89%E8%A3%9Dmemcached%E6%93%B4%E5%B1%95/","title":"PHP-安裝memcached擴展"},{"content":"Index of redis\ntar zxvf redis-4.0.6.tar.gz cd /root/redis-4.0.6 make MALLOC=libc make PREFIX=/usr/local/redis install Redis配置\nmkdir /usr/local/redis/etc/ cp redis.conf /usr/local/redis/etc/ cd /usr/local/redis/bin/ cp redis-benchmark redis-cli redis-server /usr/bin/ 修改redis配置\nvim /usr/local/redis/etc/redis.conf bind 0.0.0.0 daemonize yes redis ( 腳本 )\n#!/bin/bash #chkconfig: 2345 80 90 # Simple Redis init.d script conceived to work on Linux systems # as it does use of the /proc filesystem. PATH=/usr/local/bin:/sbin:/usr/bin:/bin REDISPORT=6379 EXEC=/usr/local/redis/bin/redis-server REDIS_CLI=/usr/local/redis/bin/redis-cli PIDFILE=/var/run/redis_6379.pid CONF=\u0026quot;/usr/local/redis/etc/redis.conf\u0026quot; case \u0026quot;$1\u0026quot; in start) if [ -f $PIDFILE ] then echo \u0026quot;$PIDFILE exists, process is already running or crashed\u0026quot; else echo \u0026quot;Starting Redis server...\u0026quot; $EXEC $CONF fi if [ \u0026quot;$?\u0026quot;=\u0026quot;0\u0026quot; ] then echo \u0026quot;Redis is running...\u0026quot; fi ;; stop) if [ ! -f $PIDFILE ] then echo \u0026quot;$PIDFILE does not exist, process is not running\u0026quot; else PID=$(cat $PIDFILE) echo \u0026quot;Stopping ...\u0026quot; $REDIS_CLI -p $REDISPORT SHUTDOWN while [ -x ${PIDFILE} ] do echo \u0026quot;Waiting for Redis to shutdown ...\u0026quot; sleep 1 done echo \u0026quot;Redis stopped\u0026quot; fi ;; restart|force-reload) ${0} stop ${0} start ;; *) echo \u0026quot;Usage: /etc/init.d/redis {start|stop|restart|force-reload}\u0026quot; \u0026gt;\u0026amp;2 exit 1 esac 啟動檔\ncp redis /etc/init.d/ chmod 755 /etc/init.d/redis 添加至開機啟動\nchkconfig --add redis chkconfig --level 2345 redis on ","date":"2022-09-30T00:00:00Z","image":"https://note.laurance.ml/p/redis-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/100_hu74f8d656a97bc6b7ca99b23e97f954a2_40393_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/redis-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/","title":"Redis-安裝教學"},{"content":"Grafana 官方載點\n以下用YUM方式安裝 Grafanae-8.2.3-1\nwget https://dl.grafana.com/enterprise/release/grafana-enterprise-8.2.3-1.x86_64.rpm yum localinstall grafana-enterprise-8.2.3-1.x86_64.rpm #啟動服務 systemctl start grafana #檢視服務狀態 systemctl status grafana InfluxDB 官方載點\n以下用YUM方式安裝 InfluxDB v1.8.0\n# influxdb.key GPG Fingerprint: 05CE15085FC09D18E99EFB22684A14CF2582E0C5 cat \u0026lt;\u0026lt;EOF | sudo tee /etc/yum.repos.d/influxdb.repo [influxdb] name = InfluxDB Repository - RHEL \\$releasever baseurl = https://repos.influxdata.com/rhel/\\$releasever/\\$basearch/stable enabled = 1 gpgcheck = 1 gpgkey = https://repos.influxdata.com/influxdb.key EOF sudo yum install influxdb Telegraf 官方載點\n以下用YUM方式安裝 Telegraf v1.24.1\n# influxdb.key GPG Fingerprint: 05CE15085FC09D18E99EFB22684A14CF2582E0C5 cat \u0026lt;\u0026lt;EOF | sudo tee /etc/yum.repos.d/influxdata.repo [influxdata] name = InfluxData Repository - Stable baseurl = https://repos.influxdata.com/stable/\\$basearch/main enabled = 1 gpgcheck = 1 gpgkey = https://repos.influxdata.com/influxdb.key EOF sudo yum install telegraf Step.1 修改Telegraf的設定檔並啟動:\n(將output-influxdb打開並指向database-telegraf,及打開network參數,及新增使用者)\nservice telegraf start Step.2 啟動influxdb,並查看資料有沒有正確寫進去DB\nservice influxdb start Step.3 建立telegraf使用者,並給予權限\ncreate user telegraf with password 'telegraf' grant all on telegraf to telegraf Step.4 啟動grafana\nsystemctl start grafana-server Step.5 開啟後台 http://localhost:8086 並建立datasource\nStep.6 匯入Grafana官方模板\nStep.7 驗證: 打開本機3000port\n","date":"2022-09-27T00:00:00Z","image":"https://note.laurance.ml/p/grafana--influxdb--telegraf-%E6%A7%8B%E5%BB%BAlinux%E6%95%88%E8%83%BD%E7%9B%A3%E6%8E%A7/100_hu620c7a524b6dcb360e250bc73a09da7c_32448_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/grafana--influxdb--telegraf-%E6%A7%8B%E5%BB%BAlinux%E6%95%88%E8%83%BD%E7%9B%A3%E6%8E%A7/","title":"Grafana + influxdb + telegraf , 構建Linux效能監控"},{"content":"***** 新版 MySQL 請參考官方文件\nStep.1 先修改 MySQL Config 讓之後建立的資料庫都使用編碼 UTF8\n$ vim /etc/my.cnf [mysqld] default-character-set=utf8 default-collation=utf8_unicode_ci character-set-server=utf8 collation-server=utf8_unicode_ci datadir=/var/lib/mysql socket=/var/lib/mysql/mysql.sock user=mysql # Disabling symbolic-links is recommended to prevent assorted security risks symbolic-links=0 [client] default-character-set=utf8 [mysql] default-character-set=utf8 [mysqld_safe] log-error=/var/log/mysqld.log pid-file=/var/run/mysqld/mysqld.pid #重新啟動MySQL讓設定生效 $ service mysqld restart Step.2 若要直接修改，不通過設定檔的方式\nALTER DATABASE dbdata CHARACTER SET utf8 COLLATE utf8_general_ci; #再查詢編碼 mysql\u0026gt; status; ... Db characterset: utf8 ... Step.3 若要修改已存在的 Tables\n$ mysqldump -uroot -prootpw --default-character-set=latin1 --skip-set-charset dbdata \u0026gt; dbdata.sql #將latin1 取代成 utf8 $ sed -i 's/latin1/utf8/g' dbdata.sql \u0026gt; dbdata_utf8.sql #匯入MYSQL $ mysql -uroot -prootpw --default-character-set=utf8 dbdata \u0026lt; dbdata_utf8.sql ","date":"2022-09-27T00:00:00Z","image":"https://note.laurance.ml/p/mysql-%E5%B0%87%E9%A0%90%E8%A8%AD%E8%B3%87%E6%96%99%E5%BA%AB%E7%B7%A8%E7%A2%BC-latin1-%E6%94%B9%E7%82%BA-utf8/100_hueeb4492b0b81c68892f21faabb865a40_40928_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mysql-%E5%B0%87%E9%A0%90%E8%A8%AD%E8%B3%87%E6%96%99%E5%BA%AB%E7%B7%A8%E7%A2%BC-latin1-%E6%94%B9%E7%82%BA-utf8/","title":"Mysql-將預設資料庫編碼 latin1 改為 UTF8"},{"content":"出現以下錯誤訊息 1.Win + R 輸入 regedit 2.尋找此路徑 HKEYLOCALMACHINE\\SYSTEM\\CurrentControlSet\\Services\\PolicyAgent 3.新增一組機碼 類型:DWORD (32-bit) 名稱:AssumeUDPEncapsulationContextOnSendRule 4.並且將值設定為2 5.重開機 ","date":"2022-09-27T00:00:00Z","image":"https://note.laurance.ml/p/windows-10-%E7%84%A1%E6%B3%95%E5%BB%BA%E7%AB%8Bvpn%E9%80%A3%E7%B7%9A/100_hue86d16e89f42e1cd25cf83156a3f9032_45736_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/windows-10-%E7%84%A1%E6%B3%95%E5%BB%BA%E7%AB%8Bvpn%E9%80%A3%E7%B7%9A/","title":"Windows 10 無法建立VPN連線"},{"content":"1. 使用 nohup+\u0026amp; 背景執行資料庫壓縮 (除掉binlog) 2. 取第一支binlog跟最後一隻binlog的日期 (當作到時候壓縮的檔名) 3. 使用 nohup+\u0026amp; 背景執行binlog壓縮 4. 原本的驗證機制被刪除了 (gcloud auth login) 5. 將壓縮好的TAR包傳到中繼機 (之前跟GCP驗證過的機器) 6. 上傳到GCP對應的目錄 ","date":"2022-09-21T00:00:00Z","image":"https://note.laurance.ml/p/gcp-%E5%B0%87mysql-db%E5%8F%8Abinlog%E5%82%99%E4%BB%BD%E8%87%B3cloudstorage/100_hu955ca03f846527c7d15132e3291bde7f_39307_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/gcp-%E5%B0%87mysql-db%E5%8F%8Abinlog%E5%82%99%E4%BB%BD%E8%87%B3cloudstorage/","title":"GCP-將MySQL-DB及BINLOG備份至Cloudstorage"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 XEN-center \u0026gt;\u0026gt; storage \u0026gt;\u0026gt; ADD disk 新增30G 查看各區硬碟 df -h 查看總硬碟有無新增30G fdisk -l 檢視已經存在的pv（物理卷） pvdisplay 檢視當前已經存在的vg（邏輯卷組） vgdisplay 檢視已經存在的lv（邏輯卷） lvdisplay 把/dev/xvdb加入與/目錄相同的vg（邏輯卷組） vgextend centos /dev/xvdb 擴容lv（邏輯卷） lvextend -L +30.0GB -n /dev/mapper/centos-root 使其生效 xfs_growfs /dev/mapper/centos-root df -h ","date":"2022-09-21T00:00:00Z","image":"https://note.laurance.ml/p/xenserver-%E9%80%8F%E9%81%8E.xva%E6%AA%94%E8%BD%89%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0server/100_hu442ea9164a062f86740540d4232db639_41801_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/xenserver-%E9%80%8F%E9%81%8E.xva%E6%AA%94%E8%BD%89%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0server/","title":"XenServer-透過.XVA檔轉移到另一台SERVER"},{"content":"1. 使用certbot-auto簽發三個月憑證,並驗證TXT 2. 將兩隻key丟到nginx目錄測試(fullchain1.pem \u0026gt;\u0026gt; XXX.crt , privkey1.pem \u0026gt;\u0026gt; XXX.key) 3. Nginx重啟reload 4. 將解析綁到本機hosts 5. 開啟剛剛設置的域名,查看憑證是否設定正確 6. 使用openssl將兩隻key合併生成XXX.pfx (fortigate支援的格式) ps.會強制設定密碼 7. 將剛剛製作的憑證XXX.pfx上傳至fortigate後台,並輸入剛剛設置的密碼 8. Fotigate後台,SSL-VPN設定這邊的伺服器憑證選單裡就會出現剛剛設置的三個月憑證 9. 驗證查看 \u0026gt;\u0026gt; 已出現剛剛製作的憑證 ","date":"2022-09-20T00:00:00Z","image":"https://note.laurance.ml/p/fortinet-fortigate60e-ssl%E5%8C%AF%E5%85%A5%E8%87%AA%E7%B0%BD3%E5%80%8B%E6%9C%88%E6%86%91%E8%AD%89/100_hu34e33e709cfe1953b88f412f1a715a07_5414_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/fortinet-fortigate60e-ssl%E5%8C%AF%E5%85%A5%E8%87%AA%E7%B0%BD3%E5%80%8B%E6%9C%88%E6%86%91%E8%AD%89/","title":"Fortinet-FortiGate60E SSL匯入自簽3個月憑證"},{"content":"1. 修改閒置時間 ","date":"2022-09-20T00:00:00Z","image":"https://note.laurance.ml/p/fortinet-fortigate60e-%E5%BB%B6%E9%81%B2%E8%87%AA%E5%8B%95%E7%99%BB%E5%87%BA%E8%A8%AD%E5%AE%9A/100_hu34e33e709cfe1953b88f412f1a715a07_5414_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/fortinet-fortigate60e-%E5%BB%B6%E9%81%B2%E8%87%AA%E5%8B%95%E7%99%BB%E5%87%BA%E8%A8%AD%E5%AE%9A/","title":"Fortinet-FortiGate60E 延遲自動登出設定"},{"content":"1. 網路 \u0026gt;\u0026gt; 介面切 WAN1 對應外網 (設定成VPN入口) (Group1: 172.16.198.50-172.16.198.100 \u0026gt;\u0026gt; ADDR1) (Group2: 172.16.198.101-172.16.198.150 \u0026gt;\u0026gt; ADDR2) 其餘port設定為LAN口 (internal:port1-7) IP/遮罩 172.16.0.55/16 關閉DHCP (默認會無法解放LAN-Port,因為被其他位置占用,解除之後就可以了) 2. 設置辦公室內部DNS 3. 開啟進階功能開關 \u0026gt;\u0026gt; 系統管理 Feature Visibility (其餘依照環境設置) 4. 新增位址 \u0026gt;\u0026gt; 內部 Internal-IP 5. 新增位址 \u0026gt;\u0026gt; SSLVPN_TUNNEL_ADDR1 , SSLVPN_TUNNEL_ADDR2 (做2個VPN通道) 6. SSL-VPN入口頁面 \u0026gt;\u0026gt; 新建 VPN-GROUP1 , VPN-GROUP2 對應 ADDR1 , ADDR2 7. 設置靜態路由 WAN1 (VPN入口) 8. 設置政策路由 (設置WAN1出口,來源分兩個 Group) 9. IP Pool \u0026gt;\u0026gt; 新建IP池 (外部IP設置自己到自己) 10. 新增用戶群組 11. SSL-VPN設定 \u0026gt;\u0026gt; 監聽走WAN1 , 4826Port , IP範圍:ADDR1,ADDR2 , 認證入口對應群組 12. 新增IPV4政策 (internal-wan1) (SSLVPN-LAN) (SSLVPN-WAN1) ","date":"2022-09-18T00:00:00Z","image":"https://note.laurance.ml/p/fortinet-fortigate60e-ssl-vpn%E8%A8%AD%E7%BD%AE/100_hu34e33e709cfe1953b88f412f1a715a07_5414_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/fortinet-fortigate60e-ssl-vpn%E8%A8%AD%E7%BD%AE/","title":"Fortinet-FortiGate60E SSL-VPN設置"},{"content":"1. 新建機器上面先安裝SNMP，並確保火牆有通 UDP161port yum install -y net-snmp net-snmp-utils 2. Cacti 頁面新增 Device \u0026gt;\u0026gt; Add 3. Device 填入機器的 hostname 及監控協議 4. Datasource 新增要撈取的資料 5. Graph Management 新增監控圖表 6. Graph Trees 分類圖表群 ","date":"2022-09-14T00:00:00Z","image":"https://note.laurance.ml/p/cacti-%E6%96%B0%E5%A2%9E%E6%A9%9F%E5%99%A8%E5%8F%8A%E5%9C%96%E8%A1%A8/100_hub50bab8a129011c882645158bcca07f0_64329_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/cacti-%E6%96%B0%E5%A2%9E%E6%A9%9F%E5%99%A8%E5%8F%8A%E5%9C%96%E8%A1%A8/","title":"Cacti-新增機器及圖表"},{"content":"方法1. 透過內建Chrome截圖實驗功能\n步驟 1. 開啟 Google Chrome 網頁後，直接在網址列輸入「chrome://flags/」會立即打開 Chrome實驗性功能 步驟 2. 直接搜尋「Desktop Screenshots」、「Desktop Sharing Hub in Omnibox」、「Desktop Sharing Hub in App Menu」三項功能，全改為「Enabled」後，按下「Relaunch」重啟 Google Chrome 瀏覽器，就會啟用內建Chrome截圖快捷鍵隱藏功能 步驟 3. 如果要截圖時，直接點擊 Chrome 網址列右側的「分享圖示」，再點選「螢幕截圖」功能 方法2. 用內建Chrome 長截圖功能\n步驟1. 開啟 Google Chrome 瀏覽器後，先進入想要長截圖網頁，直接利用鍵盤按下F12快捷鍵，顯示開發人員資訊畫面 步驟2. 接下來再利用快捷鍵呼叫Chrome瀏覽器指令選單： 並輸入長截圖指令 Capture full size screenshot：長截圖 Capture screenshot：一般截圖 Capture node screenshot：預覽截圖 Capture area screenshot：自選區域截圖 ","date":"2022-09-14T00:00:00Z","image":"https://note.laurance.ml/p/windows-chrome%E9%95%B7%E6%88%AA%E5%9C%96%E6%95%99%E5%AD%B8/100_hue86d16e89f42e1cd25cf83156a3f9032_45736_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/windows-chrome%E9%95%B7%E6%88%AA%E5%9C%96%E6%95%99%E5%AD%B8/","title":"Windows-Chrome長截圖教學"},{"content":"上傳 image 報錯 docker push laurance/green denied: requested access to the resource is denied 解决方案\ndocker tag laurance/green ihatemis/green ihatemis 為 Docker hub 用戶名 後台查看已上傳 ","date":"2022-09-13T00:00:00Z","image":"https://note.laurance.ml/p/docker-error-requested-access-to-the-resource-is-denied/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-error-requested-access-to-the-resource-is-denied/","title":"Docker-Error-requested access to the resource is denied"},{"content":"docker system命令 docker system df 整體磁區使用狀況 docker system events 獲取系統即時LOG docker system info 查看整體系統基本信息 docker system prune 清理不常用的docker資源 (包括: 容器 鏡像 磁區 網路) ","date":"2022-09-13T00:00:00Z","image":"https://note.laurance.ml/p/docker-overlay2%E4%BD%94%E7%94%A8%E5%A4%A7%E9%87%8F%E7%A3%81%E7%A2%9F%E7%A9%BA%E9%96%93%E8%99%95%E7%90%86%E6%96%B9%E6%B3%95/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-overlay2%E4%BD%94%E7%94%A8%E5%A4%A7%E9%87%8F%E7%A3%81%E7%A2%9F%E7%A9%BA%E9%96%93%E8%99%95%E7%90%86%E6%96%B9%E6%B3%95/","title":"Docker-overlay2佔用大量磁碟空間處理方法"},{"content":"查看設定檔 show full-configuration 備份設定檔 exe backup config/allconfig/ipsuserdefsigfilename xx.x.x(tftp server) 還原設定檔 # exe restore config/allconfig/ipsuserdefsig/imagefilename x.x.x.x(tftp server) 顯示系統狀態 # get sys status 顯示系統效能介面 # get system interface #show system interface 顯示系統效能 # get system performance 顯示各service utilization #diag sys top (ctrl-c exit) 格式化硬碟以消除所有記錄 #exe formatlogdisk 手動同步HA設定 #exe ha synchronize config 查看HA 狀態 #diagnose sys ha checksum cluster #show system ha #get sys ha status 重新啟動 # execute reboot 關機 # execute shutdown 查看 arp table # get system arp 清除 arp table cache # execute clear system arp table ping #exe ping x.x.X.X ","date":"2022-09-13T00:00:00Z","image":"https://note.laurance.ml/p/fortinet-fortigate-%E5%B8%B8%E7%94%A8%E9%98%B2%E7%81%AB%E7%89%86cli%E6%8C%87%E4%BB%A4/100_hu34e33e709cfe1953b88f412f1a715a07_5414_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/fortinet-fortigate-%E5%B8%B8%E7%94%A8%E9%98%B2%E7%81%AB%E7%89%86cli%E6%8C%87%E4%BB%A4/","title":"Fortinet-FortiGate 常用防火牆CLI指令"},{"content":"在標示了衝突的那個檔案上點滑鼠左鍵兩下 會自動開啟內建的合併工具 左邊區塊是版本庫的檔案 右邊區塊是本機副本的檔案 底下區塊是合併後的結果，看得出來有一堆問號的部份就是無法自動合併的區塊 （也就是衝突） 在左邊區塊衝突的部分按「滑鼠右鍵」就可以跳出相關的快顯功能表 手動選擇後在下方的窗格會顯示合併後的結果 將所有的衝突都處理完畢後按工具列上的圖示 ","date":"2022-09-13T00:00:00Z","image":"https://note.laurance.ml/p/svn-%E6%9B%B4%E6%96%B0%E6%99%82%E7%99%BC%E7%94%9F%E8%A1%9D%E7%AA%81%E5%A6%82%E4%BD%95%E8%A7%A3%E6%B1%BA/100_hu94ffa1f3b0268ddc6594e8f513862b5b_33594_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/svn-%E6%9B%B4%E6%96%B0%E6%99%82%E7%99%BC%E7%94%9F%E8%A1%9D%E7%AA%81%E5%A6%82%E4%BD%95%E8%A7%A3%E6%B1%BA/","title":"SVN-更新時發生衝突如何解決"},{"content":"到AWS-Cloudfront後台 選取要清除暫存的SITE 選取Invalidations /* 表示清除所有 再點選Create invalidation即可 ","date":"2022-09-08T00:00:00Z","image":"https://note.laurance.ml/p/aws-cloudfront-cdn%E5%BF%AB%E5%8F%96%E6%B8%85%E9%99%A4/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-cloudfront-cdn%E5%BF%AB%E5%8F%96%E6%B8%85%E9%99%A4/","title":"AWS-Cloudfront CDN快取清除"},{"content":"在ec2→ami底下Actions選Copy AMI 在Destination region 選擇要移轉的地區 在Pemissions底下按edit 在AWS Account Number 輸入要移轉的帳號 ","date":"2022-09-08T00:00:00Z","image":"https://note.laurance.ml/p/aws-ec2-ami%E8%BD%89%E5%9C%B0%E5%8D%80%E5%B8%B3%E8%99%9F/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-ec2-ami%E8%BD%89%E5%9C%B0%E5%8D%80%E5%B8%B3%E8%99%9F/","title":"AWS-EC2 AMI轉地區\u0026帳號"},{"content":"將RDS Master的binlog保留時間延長至12小時 CALL mysql.rds_set_configuration('binlog retention hours', 12); 先記下RDS Master當前進度。 show master status\\G; 建立一個臨時用的RDS-replica, 規格建議為 db.m3.xlarge 以上 進入臨時用的RDS-replica內停止主從並記錄進度 CALL mysql.rds_stop_replication; show slave status\\G; 匯出DB並排除幾個系統預設庫。 mysql -e \u0026quot;show databases;\u0026quot; -uroot -p -hRDS-master連結位置 | grep -Ev \u0026quot;Database|XXX_mariadb|information_schema|innodb|mysql|performance_schema\u0026quot; | xargs mysqldump -uroot -p -hRDS-master連結位置 --databases \u0026gt; db.sql RDS裡的mysql庫有幾個獨有的table，一般自己裝的mariaDB沒有那些table，需要獨立匯出特定那幾個table。 mysqldump -uroot -p mysql rds_configuration rds_global_status_history rds_global_status_history_old rds_heartbeat2 rds_history rds_replication_status rds_sysinfo slow_log_template \u0026gt; RDS_mysql.sql 停止EC2-Slave機的MySQL服務, 將mysql庫裡rds字頭的表通通刪掉, 外面全部的正式站的庫都刪掉(保留服務預設的庫)與白字檔(保留ib開頭檔案)後，再啟動服務。 rm -f /var/lib/mysql/mysql/rds* rm -f [大寫英文字母開頭的目錄] [白字檔] mysqld_save\u0026amp; 匯入資料庫 mysql -uking -p \u0026lt; db.sql 匯入獨有table mysql -uking -p mysql \u0026lt; RDS_mysql.sql 檢查沒問題後，下跟隨 CHANGE MASTER TO MASTER_HOST='RDS-master連結位置', MASTER_USER='主從帳號', MASTER_PASSWORD='主從密碼'; ----跟隨RDS-master CHANGE MASTER TO MASTER_LOG_FILE = 'bin-log檔名',MASTER_LOG_POS =進度; start slave; show slave status\\G; ","date":"2022-09-08T00:00:00Z","image":"https://note.laurance.ml/p/aws-ec2-mysql-slave%E8%B7%9F%E9%9A%A8rds%E6%95%99%E5%AD%B8/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-ec2-mysql-slave%E8%B7%9F%E9%9A%A8rds%E6%95%99%E5%AD%B8/","title":"AWS-EC2 mysql-slave跟隨RDS教學"},{"content":"登入 AWS Management Console 在導覽列上選擇您的帳戶名稱 選擇 Settings (設定)，開啟 Unified Settings (統一設定) 頁面 在 Unified Settings (統一設定) 中，選擇位於 Localization and default Region (本地化和預設區域) 旁的 Edit (編輯) 選取您想在主控台使用的語言，然後選擇 Save changes (儲存變更) ","date":"2022-09-08T00:00:00Z","image":"https://note.laurance.ml/p/aws-%E8%AE%8A%E6%9B%B4-management-console-%E7%9A%84%E8%AA%9E%E8%A8%80/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-%E8%AE%8A%E6%9B%B4-management-console-%E7%9A%84%E8%AA%9E%E8%A8%80/","title":"AWS-變更 Management Console 的語言"},{"content":"安裝必要套件 yum install xz gcc make wget unzip kernel-devel-$(uname -r) iptablesdevel.$(uname -p) perl-Text-CSV_XS 確認目前的kernel版本 uname -r 確認底下的目錄名稱必須要跟上個步驟的版號完全相同，若不同時請確認yum安裝的kerneldevel套件版本，對不上時有下列幾種做法 ls /usr/src/kernels/ 1) 一般、非客制化Linux版本，請參照下述 移除目前裝的版本 rpm -e kernel-devel 至 rpm包網站 http://rpm.pbone.net 下載與kernel相同版號的 kernel-devel wget *.rpm 解壓kernel-devel套件 rpm -hiv *.rpm 確認目前的kernel版本 ls /usr/src/kernels/ 確認套件版本 uname -r 2) Aamzon EC2請參照下述 移除目前裝的版本 rpm -e kernel-devel kernel版本升級 yum install kernel 重開機 reboot 確認目前的kernel版本 uname -r 再次yum安裝kernel-devel套件 yum install kernel-devel-$(uname -r) 確認套件版本 ls /usr/src/kernels/ 確認iptables版本 iptables -V 下載與iptables相對應的套件版本 wget xtables-addons-*.tar.xz Iptables套件載點\n#iptables 1.47請用 xtables-addons-1.47.tar.xz #aws-ec2 請用 xtables-addons-3.0.tar.xz tar Jxf xtables-addons-1.47.tar.xz cd xtables-addons-1.47 ./configure make make install 編譯遇到以下錯誤 yum -y install iptables-devel 其中若有遇到問題，可調整mconfig中的模組留geoip即可。 若遇到 xtnu_ipv6_find_hdr' 錯誤處理程序如下 使用/* */注解此行 vim /lib/modules/`uname -r`/build/include/linux/autoconf.h #define CONFIG_IP6_NF_IPTABLES_MODULE 1 # 或是進入extensions資料夾執行 sed -i '/define WITH_IPV6/d' compat_xtables.c xt_psd.c xt_length2.c xt_TARPIT.c xt_SYSRQ.c xt_RAWNAT.c 若鍽譯時遇到 /lib/modules/XXXX.x86_64/build/ 路徑錯誤時 重新連結到正確的目錄 cd /lib/modules/XXXX.x86_64/ rm -rf build ln -s ../../../usr/src/kernels/XXX.x86_64/ build 開始建立IP資料庫 cd geoip 若是使用付費版的GeoIP2 Databases源 ./xt_geoip_dl ./xt_geoip_build GeoIPCountryWhois.csv 若是使用免費版的GeoLite2 Databases源 需要先注冊一個 maxmind.com 帳號後即可生成一個 License Key 註冊maxmind.com帳號\n下載轉格式工具程式GeoLite2xtables wget https://github.com/mschmitt/GeoLite2xtables/archive/master.zip unzip master.zip cd GeoLite2xtables-master echo \u0026quot;YOUR_LICENSE_KEY='你的金鑰'\u0026quot; \u0026gt;\u0026gt; geolite2.license echo \u0026quot;YOUR_LICENSE_KEY='tBobMt3HrPTWVJKP'\u0026quot; \u0026gt;\u0026gt; geolite2.license ./00_download_geolite2 ./10_download_countryinfo cat /tmp/GeoLite2-Country-Blocks-IPv4.csv | ./20_convert_geolite2 /tmp/CountryInfo.txt \u0026gt; ../GeoIPCountryWhois.csv cd .. ./xt_geoip_build GeoIPCountryWhois.csv 若是遇到下圖錯誤表示perl缺少模組 yum install *YAML* perl-CPAN perl -MCPAN -e shell #預設回答yes即可 cpan[1]\u0026gt; install NetAddr::IP cpan[1]\u0026gt; exit mkdir /usr/share/xt_geoip mv BE LE /usr/share/xt_geoip/ 確認是否有安裝成功 lsmod|grep geoip 一行命令中最多可以使用10個國家 iptables -I INPUT -m geoip --src-cc PH,KR -j DROP 只允許中國IP的TCP80連線 iptables -A except -p TCP --dport 80 -m geoip --src-cc CN -j ACCEPT 只允許中國IP的TCP80、443連線 iptables -A except -p TCP -m multiport --dports 80,443 -m geoip --src-cc CN -j ACCEPT 若是要加進火牆shell請用這組 iptables -A pig -m geoip --src-cc tw -j DROP 確認規則是不是有吃到 iptables -n --list INPUT ","date":"2022-09-08T00:00:00Z","image":"https://note.laurance.ml/p/centos7-%E5%85%A7%E6%A0%B83.10.0-957-iptables-%E4%BD%BF%E7%94%A8geoip%E9%81%8E%E6%BF%BE%E5%9C%8B%E5%AE%B6/100_hufccc25f98c07fbd5a07eedc8b57cae89_16682_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/centos7-%E5%85%A7%E6%A0%B83.10.0-957-iptables-%E4%BD%BF%E7%94%A8geoip%E9%81%8E%E6%BF%BE%E5%9C%8B%E5%AE%B6/","title":"centos7 內核3.10.0-957 iptables 使用geoip過濾國家"},{"content":"查看防火牆狀態 service iptables status 永久性生效 (重啟不復原) chkconfig iptables on (開啟) chkconfig iptables off (關閉) 即時性生效 (重啟後復原) service iptables start (開啟) service iptables stop (關閉) 設置後重啟 reboot ","date":"2022-09-08T00:00:00Z","image":"https://note.laurance.ml/p/linux-iptables-%E6%B0%B8%E4%B9%85%E9%97%9C%E9%96%89%E6%8C%87%E4%BB%A4/100_hufccc25f98c07fbd5a07eedc8b57cae89_16682_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/linux-iptables-%E6%B0%B8%E4%B9%85%E9%97%9C%E9%96%89%E6%8C%87%E4%BB%A4/","title":"Linux-Iptables-永久關閉指令"},{"content":"dnf --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos dnf distro-sync ","date":"2022-08-19T00:00:00Z","image":"https://note.laurance.ml/p/centos8-%E6%89%BE%E4%B8%8D%E5%88%B0%E6%BA%90/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos8-%E6%89%BE%E4%B8%8D%E5%88%B0%E6%BA%90/","title":"CentOS8-找不到源"},{"content":"卸載舊版本 yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine rpm -qa |grep docker \u0026amp;\u0026amp; docker -e --nodeps 配置官方yum源 echo '[docker-ce-stable] name=Docker CE Stable - $basearch baseurl=https://download.docker.com/linux/centos/7/$basearch/stable enabled=1 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-stable-debuginfo] name=Docker CE Stable - Debuginfo $basearch baseurl=https://download.docker.com/linux/centos/7/debug-$basearch/stable enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-stable-source] name=Docker CE Stable - Sources baseurl=https://download.docker.com/linux/centos/7/source/stable enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-edge] name=Docker CE Edge - $basearch baseurl=https://download.docker.com/linux/centos/7/$basearch/edge enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-edge-debuginfo] name=Docker CE Edge - Debuginfo $basearch baseurl=https://download.docker.com/linux/centos/7/debug-$basearch/edge enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-edge-source] name=Docker CE Edge - Sources baseurl=https://download.docker.com/linux/centos/7/source/edge enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-test] name=Docker CE Test - $basearch baseurl=https://download.docker.com/linux/centos/7/$basearch/test enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-test-debuginfo] name=Docker CE Test - Debuginfo $basearch baseurl=https://download.docker.com/linux/centos/7/debug-$basearch/test enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-test-source] name=Docker CE Test - Sources baseurl=https://download.docker.com/linux/centos/7/source/test enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-nightly] name=Docker CE Nightly - $basearch baseurl=https://download.docker.com/linux/centos/7/$basearch/nightly enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-nightly-debuginfo] name=Docker CE Nightly - Debuginfo $basearch baseurl=https://download.docker.com/linux/centos/7/debug-$basearch/nightly enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg [docker-ce-nightly-source] name=Docker CE Nightly - Sources baseurl=https://download.docker.com/linux/centos/7/source/nightly enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg'\u0026gt;/etc/yum.repos.d/docker-ce.repo (要启用哪个版本的源就将其下的enable值设置为1，其余设置为0) 查看當前源的可用版本 yum list docker-ce --showduplicates|grep \u0026quot;^doc\u0026quot;|sort -r yum list docker-ce-cli --showduplicates|grep \u0026quot;^doc\u0026quot;|sort -r 指定安裝client跟server一樣的版本 (不指定版本會自動安裝最新版) yum install docker-ce-20.10.2-3.el7 docker-ce-cli-20.10.2-3.el7 containerd.io 查看版本 docker version 設置開機啟動 systemctl enable docker 安裝 docker-compose\nyum list docker-compose-plugin --showduplicates|grep \u0026quot;^doc\u0026quot;|sort -r yum install docker-compose-plugin-2.6.0-3.el7 ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/bin/docker-compose docker compose version ","date":"2022-08-19T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%AE%98%E6%96%B9yum%E6%BA%90%E5%AE%89%E8%A3%9D%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E6%B5%81%E7%A8%8B/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%AE%98%E6%96%B9yum%E6%BA%90%E5%AE%89%E8%A3%9D%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E6%B5%81%E7%A8%8B/","title":"Docker-官方yum源安裝指定版本流程"},{"content":"臨時添加 exprt HISTTIMEFORMAT=’%F %T ’ 永久套用 vim .bashrc HISTTIMEFORMAT=\u0026quot;%F %T \u0026quot; source .bashrc 寫入 /etc/profile 達到全體套用 … HISTTIMEFORMAT=\u0026quot;%F %T \u0026quot; source /etc/profile Shell 執行的方法 echo 'HISTTIMEFORMAT=\u0026quot;%F %T \u0026quot;' \u0026gt;\u0026gt; /etc/profile source /etc/profile ","date":"2022-08-16T00:00:00Z","image":"https://note.laurance.ml/p/linux-history%E5%A2%9E%E5%8A%A0%E6%99%82%E9%96%93%E9%A1%AF%E7%A4%BA/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-history%E5%A2%9E%E5%8A%A0%E6%99%82%E9%96%93%E9%A1%AF%E7%A4%BA/","title":"Linux-History增加時間顯示"},{"content":"-d是啟動一個守護程序； -m是分配給Memcache使用的記憶體數量，單位是MB； -u是執行Memcache的使用者； -l是監聽的伺服器IP地址，可以有多個地址； -p是設定Memcache監聽的埠，，最好是1024以上的埠； -c是最大執行的併發連線數，預設是1024； -P是設定儲存Memcache的pid檔案。 ","date":"2022-08-16T00:00:00Z","image":"https://note.laurance.ml/p/memcache-%E5%8F%83%E6%95%B8/100_hu237788ec16a9ce758e48d58f38e9b9d8_18872_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/memcache-%E5%8F%83%E6%95%B8/","title":"Memcache-參數"},{"content":"依賴 yum install libevent libevent-devel yum install perl-Test* (make test報錯) wget http://memcached.googlecode.com/files/memcached-1.4.8.tar.gz tar zxvf memcached-1.4.8.tar.gz cd memcached-1.4.8 make \u0026amp;\u0026amp; make test make install ./memcached -d -m 2048 -u nobody -p 12000 -c 2048 -P /tmp/memcached.pid\t啟動服務 pkill memcached\t停止服務 ","date":"2022-08-16T00:00:00Z","image":"https://note.laurance.ml/p/memcache-%E5%AE%89%E8%A3%9D-centos7/100_hu237788ec16a9ce758e48d58f38e9b9d8_18872_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/memcache-%E5%AE%89%E8%A3%9D-centos7/","title":"Memcache-安裝-CentOS7"},{"content":"連接memcache telnet 127.0.0.1 12000 添加緩存 add kk 1 0 4 #Enter 1234 #Enter STORED 修改緩存 replace kk 1 0 2 #Enter 11 #Enter STORED 設置緩存 set kk 1 0 4 #Enter 1234 #Enter STORED 讀取 get kk VALUE kk 1 4 1234 刪除 delete kk #Enter DELETED 清空所有缓存 flush_all OK 查看缓存服務器狀態 stats 命令格式 \\r\\n \\r\\n\n參數名稱 作用 command add， set或 replace key 缓存的名字 flag 16位无符号整数，和key要存储的数据一起存储，并在程序get缓存时，返回。 exptime 过去时间，0 表示永远不过期，如果非零，表示unix时间或距此秒数 bytes 存储数据的字节数 \\r\\n 換行Enter ","date":"2022-08-16T00:00:00Z","image":"https://note.laurance.ml/p/memcache-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/100_hu237788ec16a9ce758e48d58f38e9b9d8_18872_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/memcache-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/","title":"Memcache-常用語法"},{"content":"MongoDB官網下載地址\nyum install libcurl openssl wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.28.tgz mkdir /usr/local/mongodb tar zxvf mongodb-linux-x86_64-4.0.28.tgz -C /usr/local/ mv /usr/local/mongodb-linux-x86_64-4.0.28/ mongodb/ cd /usr/local/mongodb/ mkdir data log conf cd data/ \u0026amp;\u0026amp; mkdir db/ cd /usr/local/mongodb/conf \u0026amp;\u0026amp; touch mongodb.conf vim mongodb.conf dbpath = /usr/local/mongodb/data/db #資料檔案存放目錄 logpath = /usr/local/mongodb/log/mongodb.log #日誌檔案存放目錄 port = 27017 #埠 fork = true #以守護程式的方式啟用，即在後臺執行 ./bin/mongod --config ./conf/mongodb.conf //啟動服務 ./bin/mongod --config ./conf/mongodb.conf --shutdown //關閉服務 ./mongo\t//連線mongodb ","date":"2022-08-15T00:00:00Z","image":"https://note.laurance.ml/p/mongodb-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/100_hu5573e9113ac5ca93c9830f3619376466_35662_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mongodb-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/","title":"Mongodb-安裝教學"},{"content":"創建資料庫 (如果資料庫不存在，則創建並切換過去)\nuse DATABASE_NAME 創建集合\ndb.createCollection(\u0026quot;runoob\u0026quot;) 查看集合\nshow collections \u0026amp;\u0026amp; show tables 查看資料庫\ndb.col.find() 顯示目前數據庫\ndb 查看所有數據庫\nshow dbs 插入資料到數據庫\ndb.test222.insert({\u0026quot;name\u0026quot;:\u0026quot;菜鳥\u0026quot;}) 刪除數據庫\ndb.dropDatabase() 删除集合\ndb.collection.drop() 創建固定集合mycol，集合空間大小6142800B，文檔最大個數10000個\ndb.createCollection(\u0026quot;mycol\u0026quot;, { capped : true, autoIndexId : true, size : 6142800, max : 10000 } ) 集合插入多個文檔\ndb.col.insert({title: 'MongoDB教程', description: 'MongoDB 是一個Nosql數據庫', by: '菜鳥', url: 'https://note.laurance.ml', tags: ['mongodb', 'database', 'NoSQL'], likes: 100 }) 或是可以設成變量\ndocument=({title: 'MongoDB教程', description: 'MongoDB 是一個Nosql數據庫', by: '菜鳥', url: 'https://note.laurance.ml', tags: ['mongodb', 'database', 'NoSQL'], likes: 100 }); 在執行插入動作\ndb.col.insert(document) ","date":"2022-08-15T00:00:00Z","image":"https://note.laurance.ml/p/mongodb-%E8%AA%9E%E6%B3%95/100_hu5573e9113ac5ca93c9830f3619376466_35662_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mongodb-%E8%AA%9E%E6%B3%95/","title":"Mongodb-語法"},{"content":"MongoDB\nwget http://pecl.php.net/get/mongodb-1.3.4.tgz tar -zxvf mongodb-1.3.4.tgz cd mongodb-1.3.4.tgz /usr/local/web/php/bin/phpize ./configure -with-php-config=/usr/local/web/php/bin/php-config make \u0026amp; make test \u0026amp; make install vim /usr/local/php/etc/php.ini extension=mongodb.so ","date":"2022-08-15T00:00:00Z","image":"https://note.laurance.ml/p/php-%E5%AE%89%E8%A3%9Dmongodb%E6%93%B4%E5%B1%95/100_hu2ca637fb1d0a70ad637da30e1c6e56b4_46154_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/php-%E5%AE%89%E8%A3%9Dmongodb%E6%93%B4%E5%B1%95/","title":"PHP-安裝MongoDB擴展"},{"content":"REDIS\nwget http://pecl.php.net/get/redis-4.0.0RC2.tgz tar zxvf redis-4.0.0RC2.tgz cd redis-4.0.0RC2 /usr/local/web/php/bin/phpize ./configure -with-php-config=/usr/local/web/php/bin/php-config make \u0026amp;\u0026amp; make install vim /usr/local/php/etc/php.ini extension=redis.so ","date":"2022-08-15T00:00:00Z","image":"https://note.laurance.ml/p/php-%E5%AE%89%E8%A3%9Dredis%E6%93%B4%E5%B1%95/100_hu2ca637fb1d0a70ad637da30e1c6e56b4_46154_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/php-%E5%AE%89%E8%A3%9Dredis%E6%93%B4%E5%B1%95/","title":"PHP-安裝Redis擴展"},{"content":"\n","date":"2022-08-15T00:00:00Z","image":"https://note.laurance.ml/p/xenserver-%E5%AE%89%E8%A3%85%E6%95%99%E5%AD%B8/100_hu442ea9164a062f86740540d4232db639_41801_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/xenserver-%E5%AE%89%E8%A3%85%E6%95%99%E5%AD%B8/","title":"XenServer-安装教學"},{"content":"yum -y install nfs-utils nfs-utils-lib mkdir -p /data2/nfs chmod 777 /data2/nfs 允許172.16.0.0/16網段的機器掛載 /data2/nfs echo ‘data2/nfs 172.16.0.0/24(rw,sync,no_root_squash,no_all_squash)’ \u0026gt;\u0026gt; /etc/exports service nfs start 使用XenServer–170 匯出174的xva映像檔 mkdir -p /data2/export mount -t nfs 172.16.0.222:/data2/nfs /data2/export xe vm-list name-label=174\t(查看174的uuid) xe vm-export filename=/data2/export/174.xva vm=8fa16dde-c06d-726c-56da-c0fe47cf3d06\t(使用174的uuid 製作映像檔) XenServer – 180 匯入174的xva映像檔 mkdir -p /data2/export mount -t nfs 172.16.0.222:/data2/nfs /data2/export xe vm-import filename=/data2/export/174.xva 匯入完成之後在XenServer – 180底下會自動生成184 ","date":"2022-08-12T00:00:00Z","image":"https://note.laurance.ml/p/xenserver-%E9%80%8F%E9%81%8E%E8%99%9B%E6%93%AC%E6%A9%9F%E5%81%9Anfs-server/100_hu442ea9164a062f86740540d4232db639_41801_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/xenserver-%E9%80%8F%E9%81%8E%E8%99%9B%E6%93%AC%E6%A9%9F%E5%81%9Anfs-server/","title":"XenServer-透過虛擬機做NFS-Server "},{"content":"/var/log/message ---------------------------------------系統啟動後的資訊和錯誤日誌 /var/log/secure ------------------------------------------與安全相關的日誌資訊 /var/log/maillog ------------------------------------------與郵件相關的日誌資訊 /var/log/cron ----------------------------------------------與定時任務相關的日誌資訊 /var/log/spooler ------------------------------------------與UUCP和news裝置相關的日誌資訊 /var/log/boot.log -----------------------------------------守護程序啟動和停止相關的日誌訊息 /var/log/wtmp ---------------------------------------------永久記錄每個使用者登入、登出及系統的啟動、停機的事件 /var/run/utmp ---------------------------------------------記錄當前正在登入系統的使用者資訊； /var/log/btmp ----------------------------------------------記錄失敗的登入嘗試資訊。 #################################################################################################################### Linux 系統查詢機器最近重啟時間命令 last reboot -----------------------------------------------------------檢視所有重啟日誌資訊 last reboot | head -1 -------------------------------------------------檢視最近的一條 #################################################################################################################### last -x|grep shutdown | head -1 ---------------------------------------顯示上次關機的日期和時間 uptime -s -------------------------------------------------------------檢視系統正常的執行時間 ","date":"2022-08-11T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E7%B3%BB%E7%B5%B1%E9%87%8D%E5%95%9F-%E6%AA%A2%E8%A6%96%E6%97%A5%E8%AA%8C%E5%8F%8A%E6%AD%B7%E5%8F%B2%E7%B4%80%E9%8C%84/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E7%B3%BB%E7%B5%B1%E9%87%8D%E5%95%9F-%E6%AA%A2%E8%A6%96%E6%97%A5%E8%AA%8C%E5%8F%8A%E6%AD%B7%E5%8F%B2%E7%B4%80%E9%8C%84/","title":"Linux-系統重啟 \u0026 檢視日誌及歷史紀錄"},{"content":"# CentOS-Base.repo # # The mirror system uses the connecting IP address of the client and the # update status of each mirror to pick mirrors that are updated to and # geographically close to the client. You should use this for CentOS updates # unless you are manually picking other mirrors. # # If the mirrorlist= does not work for you, as a fall back you can try the # remarked out baseurl= line instead. # # [base] name=CentOS-$releasever – Base #mirrorlist=http://mirrorlist.centos.org/?release=$releasever\u0026amp;arch=$basearch\u0026amp;repo=os baseurl=http://mirror01.idc.hinet.net/CentOS/$releasever/os/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 #released updates [updates] name=CentOS-$releasever – Updates #mirrorlist=http://mirrorlist.centos.org/?release=$releasever\u0026amp;arch=$basearch\u0026amp;repo=updates baseurl=http://mirror01.idc.hinet.net/CentOS/$releasever/updates/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 #additional packages that may be useful [extras] name=CentOS-$releasever – Extras #mirrorlist=http://mirrorlist.centos.org/?release=$releasever\u0026amp;arch=$basearch\u0026amp;repo=extras baseurl=http://mirror01.idc.hinet.net/CentOS/$releasever/extras/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 #additional packages that extend functionality of existing packages [centosplus] name=CentOS-$releasever – Plus #mirrorlist=http://mirrorlist.centos.org/?release=$releasever\u0026amp;arch=$basearch\u0026amp;repo=centosplus baseurl=http://mirror01.idc.hinet.net/CentOS/$releasever/centosplus/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 #contrib – packages by Centos Users [contrib] name=CentOS-$releasever – Contrib #mirrorlist=http://mirrorlist.centos.org/?release=$releasever\u0026amp;arch=$basearch\u0026amp;repo=contrib baseurl=http://mirror01.idc.hinet.net/CentOS/$releasever/contrib/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 #按Esc，打入 :wq 即寫入檔案， #完成後更新資料 yum clean all yum update -y ","date":"2022-08-10T00:00:00Z","image":"https://note.laurance.ml/p/centos7-%E6%9B%B4%E6%94%B9yum%E6%BA%90hinet/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos7-%E6%9B%B4%E6%94%B9yum%E6%BA%90hinet/","title":"Centos7-更改Yum源(HiNet)"},{"content":" 1 2 3 4 5 首先將image包成 .tar檔 docker save blazingdb/blazingsql \u0026gt; blazingsql.tar 再執行docker load指令 docker load -i blazingsql.tar ","date":"2022-08-10T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E9%80%8F%E9%81%8Eimage%E5%82%B3%E8%BC%B8%E8%87%B3%E5%8F%A6%E4%B8%80%E5%8F%B0%E5%85%A7%E7%B6%B2%E6%A9%9F%E5%99%A8/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E9%80%8F%E9%81%8Eimage%E5%82%B3%E8%BC%B8%E8%87%B3%E5%8F%A6%E4%B8%80%E5%8F%B0%E5%85%A7%E7%B6%B2%E6%A9%9F%E5%99%A8/","title":"Docker-透過image傳輸至另一台內網機器"},{"content":" 1 2 3 4 5 6 7 8 9 10 建立開機畫面motd文字 使用 vim, 替換 ^[ 為“轉義”字符 在 vim 內按 : 輸入以下內容 %s/\\^\\[/ (不要點擊Enter) 輸入 Ctrl+v 然後點擊 Esc 轉換字符 最後輸入 /g ，點擊 Enter 如果操作正確 ^[ 則從灰色變為藍色，如果沒有點擊 u 返回 另一種方法 (使用echo) echo $\u0026#39;\\e[1;37m\u0026#39; \u0026gt; myfile 各符號意思: %s\t搜索 /\t第一項 \\^\\[\t轉義版本^[ /\t第二項，使用鍵盤插入實際Esc /g\t重複所有出現 ","date":"2022-08-10T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E5%BB%BA%E7%AB%8B%E9%96%8B%E6%A9%9F%E7%95%AB%E9%9D%A2motd%E6%96%87%E5%AD%97/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E5%BB%BA%E7%AB%8B%E9%96%8B%E6%A9%9F%E7%95%AB%E9%9D%A2motd%E6%96%87%E5%AD%97/","title":"Linux-建立開機畫面motd文字"},{"content":"進入BIOS\n按F7進入進階模式\n點選Advanced 頁面，進入System Agent (SA) Configuration\n在System Agent (SA) Configuration底下點選Graphics Configuration\n進入Graphics Configuration項目後，把iGPU Multi-Monitor選項設定為Enable\n(Primary Display可以設定螢幕顯示方式: 1.為自動偵測(Auto)或 2. 獨立顯示卡(PCIE)輸出或 3. 內建顯示(iGPU) 輸出)\n按F10儲存後重新開機\nWIN+X+M 進入裝置管理員\n在裝置管理員，可以看到內建顯示晶片和外接獨立顯示卡兩個顯示卡輸出裝置\n","date":"2022-08-10T00:00:00Z","image":"https://note.laurance.ml/p/windows-bios%E9%80%8F%E9%81%8E%E5%85%A7%E9%A1%AF%E8%88%87%E7%8D%A8%E9%A1%AF%E5%81%9A%E5%A4%9A%E8%9E%A2%E5%B9%95%E8%BC%B8%E5%87%BA/100_hue86d16e89f42e1cd25cf83156a3f9032_45736_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/windows-bios%E9%80%8F%E9%81%8E%E5%85%A7%E9%A1%AF%E8%88%87%E7%8D%A8%E9%A1%AF%E5%81%9A%E5%A4%9A%E8%9E%A2%E5%B9%95%E8%BC%B8%E5%87%BA/","title":"Windows-BIOS透過內顯與獨顯做多螢幕輸出"},{"content":"動作\tLINUX\tWINDOWS\t進入目錄\tcd\tcd\t創建目錄\tmkdir\tmd\t當前目錄\tpwd\tcd\t展示目錄\tls\tdir\t移除目錄\trm\tdel\t打印文件\tlp\tprint\t複製文件\tcp\tcopy\t移動文件\tmv\tren\t指令查詢\tman\thelp\t顯示環境變數\tenv\tset\t設置環境變數\tsetenv\tset\t打印文件\tlp\tprint\t","date":"2022-08-10T00:00:00Z","image":"https://note.laurance.ml/p/windows-cmd%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/100_hue86d16e89f42e1cd25cf83156a3f9032_45736_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/windows-cmd%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/","title":"Windows-CMD常用指令"},{"content":"查看Git版本 git --version 查看Git設定內容 git config --list 設定帳戶，讓 Git 知道這台電腦做的修改要連結到哪一個使用者 git config --global user.name \u0026quot;\u0026lt;Your Name\u0026gt;\u0026quot; 設定電子郵件 git config --global user.email \u0026quot;\u0026lt;your@gmail.com\u0026gt;\u0026quot; 創建一個新的Repository (打開任何一個專案資料夾打上) git init 顯示目前工作環境狀態 git status 複製專案 git clone XXX 將專案加入追蹤(暫存起來) git add hello.py 將專案 commit 進去 repository (確定存入版本庫) git commit -m \u0026quot;Init hello.py\u0026quot; 比較現在檔案和上次 commit 之間的差異 git diff git diff |cat XXX git diff 785641bf91c11f25a01c0d48182e810bc8b3bc1c (git log產生的commit代碼) 詳細列出該次commit的修改內容 git show 查看目前所有commit的歷史紀錄 git log 檢查更改 git fetch 將這些更改應用到我們的本地倉庫 git merge 檔案尚未加入過追蹤時使用，即可恢復到檔案尚未加入暫存區 (取消add) git rm --cached hello.py 若檔案已經在 repository 內，則使用以下指令 repository 與 stage 的檔案都會被還原到 HEAD，但 working directory 內的檔案不變 git reset HARD 將本地端程式 push 到遠端檔案庫 git push -u origin master 切出自己的新分支（使用 -b） git checkout -b happycoder@feature_branch ","date":"2022-08-09T00:00:00Z","image":"https://note.laurance.ml/p/git-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/100_hu22ef58e78ac999351159879ce6f7bdfc_26829_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/git-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/","title":"GIT-常用語法"},{"content":" 1 2 將某庫某表轉成SQL檔 mysqldump -uroot -p UserAccount UserGame \u0026gt;/root/UserGame.sql ","date":"2022-08-09T00:00:00Z","image":"https://note.laurance.ml/p/mysql-%E5%B0%87%E5%BA%AB%E5%8F%8A%E8%A1%A8%E8%BD%89%E6%88%90sql%E6%AA%94/100_hueeb4492b0b81c68892f21faabb865a40_40928_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mysql-%E5%B0%87%E5%BA%AB%E5%8F%8A%E8%A1%A8%E8%BD%89%E6%88%90sql%E6%AA%94/","title":"MySQL-將庫及表轉成SQL檔"},{"content":"#LAMP版本相依 mysql版本：5.1.73或5.6 apache版本：2.2.27 php版本：5.5.16 #安裝順序mysql \u0026gt; apache \u0026gt; PHP MySQL : #查看有無舊版本，若有則用rpm-e --nodeps強制刪除 rpm -qa | grep mariadb rpm -qa | grep mysql #安裝mysql yum install mysql-community-server mysql-devel (centOS6 預設版本mysqk為5.1.73) Apache編譯語法 : ./configure --prefix=/usr/local/web/apache2 --enable-ssl --enable-so --enable-vhost-alias --with-mpm=prefork PHP編譯語法 : './configure' '--prefix=/usr/local/web/php' '--with-apxs2=/usr/local/web/apache2/bin/apxs' '--with-mysql' '--with-mysqli' '--disable-cgi' '--with-iconv' '--disable-inline-optimization' '--enable-mbstring=tw' '--enable-sysvshm' '--enable-sysvsem' '--enable-sockets' '--with-jpeg-dir' '--with-png-dir' '--with-gd' '--with-zlib' '--with-curl' '--enable-zip' '--with-openssl-dir=/usr/lib/openssl' '--with-openssl' '--enable-opcache' #安裝cacti tar zxvf cacti-0.8.7g.tar.gz 再將cacti放置web存取的目錄下 mv cacti-0.8.7g /home/cacti #安裝snmp yum install -y net-snmp net-snmp-utils #安裝RRDTool cd rrdtool-1.0.50 ./configure --prefix=/usr/local/rrdtool make make install #如果編譯有問題 可嘗試下面兩行指令 可能缺少的套件 #ln -s /usr/local/libpng/lib/libpng.so /usr/lib/ #ln -s /usr/local/freetype/lib/libfreetype.so /usr/lib/ #yum -y install freetype-devel #yum -y install libpng-devel #yum -y install libart_lgpl-devel 啟動mysql mysqld_safe \u0026amp; 建立mysql的root帳號與密碼 mysqladmin -u root password '密碼' 建立資料庫 cacti mysqladmin --user=root -p create cacti 將 cacti 目錄底下的cacti.sql 匯入資料庫 cacti cd /home/cacti/ mysql -u root -p cacti \u0026lt; cacti.sql 進入MySQL並建立一個存取cacti資料庫的使用者cactiuser與密碼123456 並給予權限 mysql -u root -p mysql\u0026gt; grant all on cacti.* to cactiuser@localhost identified by '123456'; mysql\u0026gt; flush privileges; mysql\u0026gt; exit vim /home/cacti/include/config.php (config.php 定義在cacti 資料庫進行存取時，所使用的帳號及密碼) 26 $database_type = \u0026quot;mysql\u0026quot;; 27 $database_default = \u0026quot;cacti\u0026quot;; 28 $database_hostname = \u0026quot;localhost\u0026quot;; 29 $database_username = \u0026quot;cactiuser\u0026quot;; 30 $database_password = \u0026quot;kiwi888\u0026quot;; 31 $database_port = \u0026quot;3306\u0026quot;; 建立使用者cactiuser，密碼是設定為123456 useradd cactiuser 切到cactiuser su - cactiuser 設定排程 cacti 每1分鐘收集一次數據 crontab -e 輸入 */1 * * * * /usr/local/bin/php /home/cacti/poller.php \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 exit 離開cactiuser ","date":"2022-08-07T00:00:00Z","image":"https://note.laurance.ml/p/cacti-%E5%AE%89%E8%A3%9D%E6%96%B9%E6%B3%95/100_hub50bab8a129011c882645158bcca07f0_64329_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/cacti-%E5%AE%89%E8%A3%9D%E6%96%B9%E6%B3%95/","title":"Cacti-安裝方法"},{"content":"更改系統引數 vim /etc/locale.conf\t# CentOS 7 LANG=“zh_CN.UTF-8” source /etc/locale.conf vim /etc/sysconfig/i18n\t# CentOS6 LANG=“zh_CN.UTF-8” source /etc/sysconfig/i18n 重啟系統 reboot ","date":"2022-08-07T00:00:00Z","image":"https://note.laurance.ml/p/centos-%E6%9B%B4%E6%94%B9%E7%B3%BB%E7%B5%B1%E8%AA%9E%E8%A8%80/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos-%E6%9B%B4%E6%94%B9%E7%B3%BB%E7%B5%B1%E8%AA%9E%E8%A8%80/","title":"Centos-更改系統語言"},{"content":"到AWS控制台 選擇AMIs \u0026gt; 點選 Modify Image Permissions 輸入 新帳號的Account Id \u0026gt; Add Permission \u0026gt; 下面的勾勾打勾 \u0026gt; save 再到新帳號的AWS控制台\u0026gt; EC2 \u0026gt; AMIs \u0026gt; private images 即可看到剛剛授權的AMIs 官方文件\n","date":"2022-08-05T00:00:00Z","image":"https://note.laurance.ml/p/aws-amis%E6%8E%88%E6%AC%8A%E7%B5%A6%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-amis%E6%8E%88%E6%AC%8A%E7%B5%A6%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/","title":"AWS-AMIs授權給其他帳號"},{"content":"1.建立1個VPC 2.新增4個subnets (2個Public、2個private) 用途:預防AZ出現故障無法切換 3.新增Internet gateways，並將IGW掛上VPC。 4.新增NAT gateways，選擇Public subnet，並給一個外網IP。 5.新增2個route table，1個叫igw、1個叫nat。 6.subnets 套用route talbe，Public套用igw，private套用nat。 ","date":"2022-08-05T00:00:00Z","image":"https://note.laurance.ml/p/aws-vpc-%E5%BB%BA%E7%BD%AE/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-vpc-%E5%BB%BA%E7%BD%AE/","title":"AWS-VPC 建置"},{"content":" 1 2 3 4 5 下載AWS管理工具 curl \u0026#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\u0026#34; -o \u0026#34;awscliv2.zip\u0026#34; unzip awscliv2.zip sudo ./aws/install aws --version ","date":"2022-08-05T00:00:00Z","image":"https://note.laurance.ml/p/aws-%E4%B8%8B%E8%BC%89aws-cli%E4%BD%BF%E7%94%A8%E7%B5%82%E7%AB%AF%E6%8E%A7%E5%88%B6/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-%E4%B8%8B%E8%BC%89aws-cli%E4%BD%BF%E7%94%A8%E7%B5%82%E7%AB%AF%E6%8E%A7%E5%88%B6/","title":"AWS-下載aws-cli使用終端控制"},{"content":"撈出 RDS binlog cd /home/mariadb/binlog mysqlbinlog --base64-output=decode-rows -v --set-charset=\u0026quot;utf8\u0026quot; --start-datetime=\u0026quot;2021-11-04 14:06:00\u0026quot; --stop-datetime=\u0026quot;2021-11-04 14:09:00\u0026quot; mysql-bin-changelog.450599 \u0026gt; /home/laurance/RDS-1104-1405-1410.sql SCP過去跳板機 scp RDS-1005-1330-1430.sql laurance@admin:~ ","date":"2022-08-05T00:00:00Z","image":"https://note.laurance.ml/p/aws-%E6%92%88%E5%87%BArds%E7%9A%84binlog/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-%E6%92%88%E5%87%BArds%E7%9A%84binlog/","title":"AWS-撈出RDS的binlog"},{"content":" 1 2 3 4 5 aws configure AWS Access Key ID [None]: XXXXXXXXXXXXXXXXXXX AWS Secret Access Key [None]: XXXXXXXXXXXXXXXXXXX Default region name [None]: ap-northeast-1 Default output format [None]: json ","date":"2022-08-05T00:00:00Z","image":"https://note.laurance.ml/p/aws-%E9%85%8D%E7%BD%AE%E9%87%91%E9%91%B0%E5%9C%A8linux%E7%99%BB%E5%85%A5/100_hu4977afd0e8455b389e73ed8c78bcad93_31864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/aws-%E9%85%8D%E7%BD%AE%E9%87%91%E9%91%B0%E5%9C%A8linux%E7%99%BB%E5%85%A5/","title":"AWS-配置金鑰在LINUX登入"},{"content":"--------------------------------------- #svn --version svn: E200029: Couldn't perform atomic initialization svn: E200030: SQLite compiled for 3.19.2, but running with 3.6.20 這是因為編譯SVN用的sqlite 版本3.19.2和系統中已安裝的sqlite3.6.20版本不一致 #cd /usr/local/svn/bin #ldd svn 從輸出中看出 libsqlite3.so.0 =\u0026gt; /usr/lib64/libsqlite3.so.0 (0x00007f0f8572d000) [root@localhost lib64]# find / -name libsqlite3.so.0 -print /usr/local/sqlite/lib/libsqlite3.so.0 /usr/local/sqlite-autoconf-3190200/.libs/libsqlite3.so.0 /usr/local/lib/libsqlite3.so.0 /usr/lib64/libsqlite3.so.0 [root@localhost lib64]# mv libsqlite3.so.0 libsqlite3.so.0.old [root@localhost lib64]# ln -s /usr/local/lib/libsqlite3.so.0 libsqlite3.so.0 ","date":"2022-08-04T00:00:00Z","image":"https://note.laurance.ml/p/svn-error-sqlite-compiled-for-3.19.2-but-running-with-3.6.20/100_hu94ffa1f3b0268ddc6594e8f513862b5b_33594_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/svn-error-sqlite-compiled-for-3.19.2-but-running-with-3.6.20/","title":"SVN-error (SQLite compiled for 3.19.2, but running with 3.6.20)"},{"content":"--------------------------------------- SVN出錯 symbol lookup error svn: symbol lookup error: /usr/local/lib/libsvn_fs_x-1.so.0: undefined symbol: svn_fs_util__version 系统中装了rpm版的subversion，跟APR，引起版本混乱。故清理这些RPM包试试： rpm -qa|grep subversion rpm -e --nodeps subversion-libs-1.7.14-16.el7.x86_64 rpm -qa|grep apr echo '/usr/local/APR/lib'\u0026gt;\u0026gt;/etc/ld.so.conf echo '/usr/local/ARP-util/lib'\u0026gt;\u0026gt;/etc/ld.so.conf ldconfig svnadmin create --pre-1.6-compatible /home/svn/mis-note ","date":"2022-08-04T00:00:00Z","image":"https://note.laurance.ml/p/svn-error-undefined-symbol-svn_fs_util__version/100_hu94ffa1f3b0268ddc6594e8f513862b5b_33594_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/svn-error-undefined-symbol-svn_fs_util__version/","title":"SVN-error (undefined symbol: svn_fs_util__version)"},{"content":"編輯 Apache 設定檔 vim /etc/httpd/conf/httpd.conf ErrorLogFormat \u0026quot;[%{u}t] [%-m:%l] [pid %P:tid %T] %7F: %E: [client\\ %a] %M% ,\\ referer\\ %{Referer}i\u0026quot; \u0026lt;IfModule logio_module\u0026gt; LogFormat \u0026quot;%h %l %u %t \\\u0026quot;%r\\\u0026quot; %\u0026gt;s %O %I %T %b \\\u0026quot;%{Referer}i\\\u0026quot; \\\u0026quot;%{User-Agent}i\\\u0026quot;\u0026quot; nreporter \u0026lt;/IfModule\u0026gt; CustomLog \u0026quot;logs/access-NReporter_log\u0026quot; nreporter 重啟 Apache 服務和確認 Apache 服務狀態 systemctl restart httpd \u0026amp;\u0026amp; systemctl status httpd 編輯 rsyslog 設定檔 vim /etc/rsyslog.conf ###MODULES### $ModLoad imfile # provides support for file logging # Send Apache log to N-Reporter input(type=\u0026quot;imfile\u0026quot; File=\u0026quot;/var/log/httpd/access-NReporter_log\u0026quot; Tag=\u0026quot;apache\u0026quot; Severity=\u0026quot;info\u0026quot; Facility=\u0026quot;local6\u0026quot; Ruleset=\u0026quot;nreporter\u0026quot;) input(type=\u0026quot;imfile\u0026quot; File=\u0026quot;/var/log/httpd/error_log\u0026quot; Tag=\u0026quot;apache\u0026quot; Severity=\u0026quot;warning\u0026quot; Facility=\u0026quot;local6\u0026quot; Ruleset=\u0026quot;nreporter\u0026quot;) ruleset(name=\u0026quot;nreporter\u0026quot;){action(type=\u0026quot;omfwd\u0026quot; Target=\u0026quot;192.168.2.69\u0026quot; Port=\u0026quot;514\u0026quot; Protocol=\u0026quot;udp\u0026quot;)} 重啟 Rsyslog 服務和確認 Rsyslog 服務正常 systemctl restart rsyslog \u0026amp;\u0026amp; systemctl status rsyslog ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/apache-%E9%80%8F%E9%81%8Ersyslog%E5%90%8C%E6%AD%A5log/100_huc56479c16103f06e85c76b60f35aaa1f_12865_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/apache-%E9%80%8F%E9%81%8Ersyslog%E5%90%8C%E6%AD%A5log/","title":"Apache-透過rsyslog同步log"},{"content":"wget https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py vim speedtest.py \u0026gt;\u0026gt; (第一行#改python3) chmod a+rx speedtest.py mv speedtest.py /usr/local/bin/speedtest-cli chown root:root /usr/local/bin/speedtest-cli 命令後追加 --share 可以得到測試信息圖片 speedtest-cli --share 追加 --list 可以得到所有的測試服務器 speedtest-cli --list 使用 – server 測試指定服務器的下載或上傳速度 speedtest-cli --server 41009 (站点ID可通過 --list 獲取) ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/centos-%E5%AE%89%E8%A3%85speedtest-cli/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos-%E5%AE%89%E8%A3%85speedtest-cli/","title":"CentOS-安装speedtest-cli"},{"content":"安裝xfsdump工具 yum install xfsdump -y 備份/home磁區的掛載內容 (一路按ENTER) xfsdump -f /home.xfsdump /home 這時候會再跟目錄出現剛剛備份的 /home \u0026gt;\u0026gt; home.xfsdump 成功備份後，將/home磁區移除掛載 (必須以root身分登入才能執行) umount /home 將/home磁區大小定義為50G lvreduce -L 50G /dev/mapper/centos-home 將其餘空間擴充到根目錄底下 lvextend -l +100%FREE /dev/mapper/centos-root 使根目錄擴充生效 xfs_growfs /dev/mapper/centos-root 格式化/home掛載對應的磁區 mkfs.xfs -f /dev/mapper/centos-home 重新掛載/home mount /home 將原本備份的內容寫入/home xfsrestore -f /home.xfsdump /home 可以看倒已將磁區容量擴充 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/centos-%E6%A0%B9%E7%9B%AE%E9%8C%84%E7%A3%81%E5%8D%80%E6%93%B4%E5%85%85/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos-%E6%A0%B9%E7%9B%AE%E9%8C%84%E7%A3%81%E5%8D%80%E6%93%B4%E5%85%85/","title":"CentOS-根目錄磁區擴充"},{"content":"yum install coreutils --allowerasing \u0026amp;\u0026amp; or dnf install scp DIR_COLORS root@172.17.0.2:~ mv DIR_COLORS ~/.dir_colors reboot ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/centos-%E7%9B%AE%E9%8C%84%E6%B2%92%E9%A1%AF%E7%A4%BA%E9%A1%8F%E8%89%B2/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos-%E7%9B%AE%E9%8C%84%E6%B2%92%E9%A1%AF%E7%A4%BA%E9%A1%8F%E8%89%B2/","title":"CentOS-目錄沒顯示顏色"},{"content":"sed -i -e \u0026quot;s/^mirrorlist=http:\\/\\/mirrorlist.centos.org/#mirrorlist=http:\\/\\/mirrorlist.centos.org/g\u0026quot; /etc/yum.repos.d/CentOS-Base.repo sed -i -e \u0026quot;s/^#baseurl=http:\\/\\/mirror.centos.org/baseurl=http:\\/\\/vault.centos.org/g\u0026quot; /etc/yum.repos.d/CentOS-Base.repo ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/centos6-%E4%BF%AE%E6%94%B9yum%E6%BA%90/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos6-%E4%BF%AE%E6%94%B9yum%E6%BA%90/","title":"CentOS6-修改yum源"},{"content":"wget https://nchc.dl.sourceforge.net/project/ss5/ss5/3.8.9-8/ss5-3.8.9-8.tar.gz yum -y install gcc automake make yum -y install pam-devel openldap-devel cyrus-sasl-devel openssl-devel tar xvf ss5-3.8.9-8.tar.gz cd ss5-3.8.9 ./configure \u0026amp;\u0026amp; make \u0026amp;\u0026amp; make install vi /etc/opt/ss5/ss5.conf auth 0.0.0.0/0 - - permit - 0.0.0.0/0 - 0.0.0.0/0 加入用戶名及密碼 /etc/opt/ss5/ss5.passwd 修改ss5啟動的port(默認是1080) vi /etc/sysconfig/ss5 #SS5_OPTS=” -u root” 註解新增 SS5_OPTS=\u0026quot; -u root -b 0.0.0.0:8080\u0026quot; bash檔增執行權限 /etc/rc.d/init.d/ss5 chmod 755 /etc/rc.d/init.d/ss5 service ss5 start ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/centos6-%E5%AE%89%E8%A3%9Dsocks5%E4%BB%A3%E7%90%86/100_huc03b46b7f8bda3b0ed1195c88ee7f533_13486_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/centos6-%E5%AE%89%E8%A3%9Dsocks5%E4%BB%A3%E7%90%86/","title":"CentOS6-安裝socks5代理"},{"content":"DNS正解／反解 ：主要是來說明〝IP位置〞與〝網址〞之間關連的狀況。 ●DNS正解：是指〝網址〞對應到〝主機IP〞的關連狀況，亦為使用者在DNS Server上，透過A 指向、MX 指向、TXT指向、NS指向的設定，用來表示連結網址時會通到的IP位置的主機；或是寄信時該投遞到主機位置 ●DNS反解：是指 IP 位址對映到主機的關連狀況，亦為IP透過PTR指向設定，用來表示IP對應到的網址，這個通常是設定伺服器名稱hostname，一般搭配正解的設定來達到驗證效果，如：MAIL的收信方會檢查發信IP 之反解設定是否與正解的NS指向一致；或系統有驗證到反解的訊息才會寄出系統通知信件…等 正解／反解 的設定對象為何\u0026gt;\u0026gt; ●正解需求的設定對象：為網址的擁有者。 ●反解需求的設定對象：有ROOT權限的主機商。 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/dns-%E6%AD%A3%E8%A7%A3%E8%88%87%E5%8F%8D%E8%A7%A3/100_hu4f6562e501064fb4525a6459b027d812_33292_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/dns-%E6%AD%A3%E8%A7%A3%E8%88%87%E5%8F%8D%E8%A7%A3/","title":"DNS-正解與反解"},{"content":"#查看目前使用的服務 docker system df #Docker passwd存放位置 /root/.docker/config.json #設定docker啟動，容器自動啟動 docker run 容器 --restart=always #使用update參數修改配置 docker update --restart=always ***(容器名) #重啟Docker後，不啟動該容器 docker update --restart=no mysqld-exporter #啟動錯誤查看目錄位置 /etc/docker/daemon.json #使用root權限進入容器 exec -u 0 docker exec -ti -u 0 779afa4111c2 /bin/bash #完全停止容器 docker stop $(docker ps -a -q) #完全刪除容器 docker rm $(docker ps -a -q) #docker默认网段的修改 \u0026quot;/etc/docker/daemon.json\u0026quot; \u0026gt;\u0026gt; { \u0026quot;bip\u0026quot;:\u0026quot;192.168.0.1/24\u0026quot; } #docker network : #創建network docker network create influxdb #建立自訂義 Network docker network create --driver bridge --subnet 172.16.50.0/24 --gateway=172.16.50.1 --ip-range 172.16.50.0/24 \u0026lt;network name\u0026gt; #查看network細節 docker network inspect influxdb #拉取container設定檔 docker run --rm telegraf telegraf config \u0026gt; telegraf.conf #運行容器 docker run -di #使得 Container 裡面的檔案路徑Mapping 到實體主機的檔案路徑 docker -v XXX #搜尋鏡像 docker search mariadb #拉取鏡像 docker pull mariadb #啟動容器 docker run -d --name prometheus2022 prom/prometheus #複製容器內檔掛載到本機目錄 docker cp -a prometheus2022:/etc/prometheus/ /root/docker-service/prometheus #砍掉容器 docker rm -f prometheus2020 #清理掉所有的container docker rm -fv $(docker ps -a -q) #刪除images docker stop containerID docker rm containerID docker rmi imageID #重新命名容器名稱 docker rename \u0026lt;my_container\u0026gt; \u0026lt;my_new_container\u0026gt; ############################################################# ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%8F%83%E6%95%B8/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%8F%83%E6%95%B8/","title":"Docker-常用指令\u0026\u0026參數"},{"content":"[Node-exporter] docker run -d -p 9100:9100 \\ -v \u0026quot;/proc:/host/proc\u0026quot; \\ -v \u0026quot;/sys:/host/sys\u0026quot; \\ -v \u0026quot;/:/rootfs\u0026quot; \\ --net=host \\ prom/node-exporter \\ --path.procfs /host/proc \\ --path.sysfs /host/sys \\ --collector.filesystem.ignored-mount-points \u0026quot;^/(sys|proc|dev|host|etc)($|/)\u0026quot; [Mysql-exporter] docker run -d --restart=always --name mysqld-exporter -p 9104:9104 --net=host --pid=\u0026quot;host\u0026quot; -e DATA_SOURCE_NAME=\u0026quot;exporter:123456@(172.16.0.222:3307)/\u0026quot; bitnami/mysqld-exporter ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bexporter/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bexporter/","title":"Docker-建立exporter"},{"content":"搜尋鏡像 docker search mariadb 拉取鏡像 docker pull mariadb 本地建立目錄掛載進docker來管理 mkdir -p /root/docker-service/mysql/conf/ \u0026amp;\u0026amp; mkdir -p /root/docker-service/mysql/data/ 跑起服務 docker run -d -p 3307:3306 -e MARIADB_ROOT_PASSWORD=123456 -v /root/docker-service/mysql/data/:/var/lib/mysql/ -v /root/docker-service/mysql/conf/:/etc/mysql/ --name mariadb mariadb:latest ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bgrafana%E7%9B%A3%E6%8E%A7%E4%B8%A6%E6%8E%9B%E8%BC%89%E5%9C%A8%E6%9C%AC%E6%A9%9F/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bgrafana%E7%9B%A3%E6%8E%A7%E4%B8%A6%E6%8E%9B%E8%BC%89%E5%9C%A8%E6%9C%AC%E6%A9%9F/","title":"Docker-建立Grafana監控並掛載在本機"},{"content":"建立本機須掛載的目錄 mkdir -p /root/docker-service/grafana/etc mkdir -p /root/docker-service/grafana/share 拉取映象 docker pull grafana 執行映象 docker run -d --name grafana -p 3000:3000 grafana/grafana 複製docker裡的設定檔到本機 docker cp -a 594649e64f24:/etc/grafana /root/docker-service/grafana/etc/ docker cp -a 594649e64f24:/usr/share/grafana /root/docker-service/grafana/share/ 刪除container docker stop container_id docker rm container_id 重跑設定檔 重跑掛載 docker run -d -i -p 3000:3000 \\ -e \u0026quot;GF_SERVER_ROOT_URL=http://grafana.server.name\u0026quot; \\ -e \u0026quot;GF_SECURITY_ADMIN_PASSWORD=admin\u0026quot; \\ -v /root/docker-service/grafana/etc/grafana/grafana.ini:/etc/grafana/grafana.ini \\ -v /root/docker-service/grafana/share/grafana/conf/defaults.ini:/usr/share/grafana/conf/defaults.ini \\ --net=host \\ grafana/grafana ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bmariadb/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bmariadb/","title":"Docker-建立MariaDB"},{"content":"[prometheus] docker run -d -p 9090:9090 \\ -v /root/docker-service/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml \\ --name prometheus \\ --net=host \\ prom/prometheus ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bprometheus/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bprometheus/","title":"Docker-建立Prometheus"},{"content":"[prometheus] docker run -d -p 9090:9090 \\ -v /root/docker-service/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml \\ --name prometheus \\ --net=host \\ prom/prometheus ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Btelegraf/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Btelegraf/","title":"Docker-建立telegraf"},{"content":"建立Namesppace \u0026gt;\u0026gt; zabbix-net docker network create --subnet 172.20.0.0/16 --ip-range 172.20.240.0/20 zabbix-net 建立docker容器工作目錄 mkdir -p /usr/local/docker/mysql 建立mysql容器 docker run --name mysql-server --hostname=mysql-server -t \\ -e MYSQL_DATABASE=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_USER=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_PASSWORD=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_ROOT_PASSWORD=\u0026quot;123456\u0026quot; \\ --network=zabbix-net \\ -v /usr/local/docker/mysql:/var/lib/mysql \\ -v /etc/localtime:/etc/localtime \\ -d mysql:5.7 建立zabbix-server-mysql容器 docker run --name zabbix-server-mysql --hostname=zabbix-server-mysql -t \\ -e DB_SERVER_HOST=\u0026quot;mysql-server\u0026quot; \\ -e MYSQL_DATABASE=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_USER=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_PASSWORD=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_ROOT_PASSWORD=\u0026quot;123456\u0026quot; \\ --network=zabbix-net \\ --link mysql-server:mysql \\ -p 10051:10051 \\ -d zabbix/zabbix-server-mysql:alpine-4.0.24 建立前端 zabbix-web-nginx-mysql容器 docker run --name zabbix-web-nginx-mysql --hostname=zabbix-web-nginx-mysql -t \\ -e DB_SERVER_HOST=\u0026quot;mysql-server\u0026quot; \\ -e MYSQL_DATABASE=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_USER=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_PASSWORD=\u0026quot;zabbix\u0026quot; \\ -e MYSQL_ROOT_PASSWORD=\u0026quot;123456\u0026quot; \\ --network=zabbix-net \\ --link mysql-server:mysql \\ --link zabbix-server-mysql:zabbix-server \\ -p 85:8080 \\ -d zabbix/zabbix-web-nginx-mysql:alpine-4.0.24 建立Client端的控制元件 docker run --name some-zabbix-agent --hostname=some-zabbix-agent \\ -e ZBX_HOSTNAME=\u0026quot;zabbix-server-agent\u0026quot; \\ -e ZBX_SERVER_HOST=\u0026quot;zabbix-server-mysql\u0026quot; \\ -e ZBX_METADATA=\u0026quot;zabbix-server-agent\u0026quot; \\ --network=zabbix-net \\ --restart=always \\ -p 10050:10050 \\ -d zabbix/zabbix-agent 登入檢測 預設: 賬號：Admin 密碼：zabbix Configuration \u0026gt; Hosts \u0026gt; Create host \u0026gt; Host name : some-zabbix-agent \u0026gt; Groups : Linux servers \u0026gt; IP : 172.20.240.4 \u0026gt; Port : 10050 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bzabbix%E5%88%86%E6%95%A3%E5%BC%8F%E7%9B%A3%E6%8E%A7/100_hu3201776fa374726f6ce1bc51624a8839_26222_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/docker-%E5%BB%BA%E7%AB%8Bzabbix%E5%88%86%E6%95%A3%E5%BC%8F%E7%9B%A3%E6%8E%A7/","title":"Docker-建立Zabbix分散式監控"},{"content":"--------------------------- 資訊回應 (100–199), 成功回應 (200–299), 重定向 (300–399), 用戶端錯誤 (400–499), 伺服器端錯誤 (500–599). --------------------------- 100\t此臨時回應表明，目前為止的一切完好，而用戶端應當繼續完成請求 101\t此狀態碼乃為用戶端 Upgrade (en-US) 請求標頭發送之回應、且表明伺服器亦切換中。 102\t此狀態碼表明伺服器收到並處理請求中，但目前未有回應。 200 OK 201\t請求成功且新的資源成功被創建，通常用於 POST 或一些 PUT 請求後的回應。 202\t此請求已經被接受但尚未處理。 300\t請求擁有一個以上的回應。 301\t請求資源的 URI 已被改變。 302\t此響應代碼表示請求資源的 URI 已臨時更改。 400 此回應意味伺服器因為收到無效語法，而無法理解請求。 401\t需要授權以回應請求。它有點像 403，但這裡的授權，是有可能辦到的。 403\t用戶端並無訪問權限，例如未被授權，所以伺服器拒絕給予應有的回應。不同於 401，伺服端知道用戶端的身份。 404\t伺服器找不到請求的資源。 500\t請求已進入伺服器，\t可能原因:程式錯誤-php-error 501\t伺服器不支援請求的方法，僅有GET與HEAD是伺服器必須支援的方法。 502\t作為閘道的伺服器，在獲取處理請求所需的回應時，得到無效回應。 503\t常見原因是服務器因維護而停機或過載。 504\t伺服器作為閘道器時無法及時得到回應。\t可能原因:cloudfront節點未更新 505\t請求使用的 HTTP 版本不被伺服器支援。 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/http-%E5%B8%B8%E8%A6%8B%E7%8B%80%E6%85%8B%E9%8C%AF%E8%AA%A4%E7%A2%BC/100_hu49f31a6f3a9c1a197b067ff0fd6e94a5_141914_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/http-%E5%B8%B8%E8%A6%8B%E7%8B%80%E6%85%8B%E9%8C%AF%E8%AA%A4%E7%A2%BC/","title":"HTTP-常見狀態錯誤碼"},{"content":"返回具有最新时间戳的点 ORDER BY time DESC 時間格式 --precision rfc3339 在查詢語句的最後加上tz('Asia/Shanghai')，這樣查詢的時間纔是糾正爲中國時區顯示 tz('Asia/Taipei') tz('Asia/Shanghai') 查詢某個時間返回的數據，設置時區爲上海時區 select * from CPU_ALL where time \u0026gt;= '2018-11-23 14:30:39' and time \u0026lt;= '2019-11-23 14:32:32' tz('Asia/Shanghai') 查詢特定字段數據 SELECT * FROM \u0026quot;cpu\u0026quot; WHERE time \u0026lt; now() - 5m and \u0026quot;cpu\u0026quot; =~ /cpu0/ 创建measurement insert myapp,host=127.0.0.1,service=app.service.index qps=1340,rt=1313,cpu=45.23,mem=\u0026quot;4145m\u0026quot;,load=1.21 查看使用者 SHOW USERS 刪除使用者 DROP USER \u0026quot;admin-mysql\u0026quot;\t新增使用者 CREATE USER jdoe WITH PASSWORD '1337password' 新增使用者並給予最高權限 CREATE USER jdoe WITH PASSWORD '1337password' WITH ALL PRIVILEGES 取消使用者最高權限 REVOKE ALL PRIVILEGES FROM \u0026quot;mysql-server\u0026quot; 給予使用者讀mydb的權限 GRANT READ ON mydb TO \u0026quot;mysql-server\u0026quot; 查詢當前資料庫中含有的表 SHOW MEASUREMENTS 查看key數據 SHOW series from pay 刪除key DROP SERIES FROM WHERE ='' 查看表中的TAG SHOW TAG KEYS FROM \u0026quot;system\u0026quot; 查看表中的TAG-host SHOW TAG VALUES FROM \u0026quot;system\u0026quot; WITH KEY = \u0026quot;host\u0026quot; 查詢所有監控項目 show field keys 查詢當前資料庫下所有表的第一行記錄 SELECT * FROM /.*/ LIMIT 1 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/influxdb-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/100_hu3943a49f3cf3881293921668d3732a89_68244_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/influxdb-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/","title":"InfluxDB 常用語法"},{"content":"方法一\t(設置crontab) EX:\t(每10秒執行一次) #* * * * * php /root/test/php/crontab/tolog.php #* * * * * sleep 10; php /root/test/php/crontab/tolog.php #* * * * * sleep 20; php /root/test/php/crontab/tolog.php #* * * * * sleep 30; php /root/test/php/crontab/tolog.php #* * * * * sleep 40; php /root/test/php/crontab/tolog.php #* * * * * sleep 50; php /root/test/php/crontab/tolog.php 方法二 (設置腳本shell) EX:\t(最多每2秒執行) #/bin/bash step=2 #間隔的秒數 for (( i=0; i \u0026lt; 60; i=(i+step) )); do XXX sleep $step done exit 0 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-crontab%E5%AF%A6%E7%8F%BE%E4%BB%A5%E7%A7%92%E7%82%BA%E5%96%AE%E4%BD%8D%E6%8E%92%E7%A8%8B/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-crontab%E5%AF%A6%E7%8F%BE%E4%BB%A5%E7%A7%92%E7%82%BA%E5%96%AE%E4%BD%8D%E6%8E%92%E7%A8%8B/","title":"Linux-Crontab實現以秒為單位排程"},{"content":"參數說明： -F ：清除所有的已訂定的規則； -X ：殺掉所有使用者建立的 tables ； -Z ：將所有的 chain 的計數與流量統計都歸零 -N ：建立新的規則鏈(chain) -E ：更改指定的規則鏈(chain)名稱 -A ：追加規則:新增規則到某個規則鏈中，該規則將會成為規則鏈中的最後一條規則 -R ：修改規則--\u0026gt;iptables -R INPUT 1 -s 192.168.12.0 -j DROP 取代現行規則，順序不變(1是位置) -I ：插入規則--\u0026gt;iptables -I INPUT 1 --dport 80 -j ACCEPT 插入一條規則，原本位置上的規則將會往後移動一個順位 -L ：查看規則--\u0026gt;iptables -L INPUT 列出規則鏈中的所有規則 -P ：policy , 定義過濾政策。 也就是未符合過濾條件之封包，預設的處理方式 -t ：參數後跟上要單獨查看的表名 $IPTABLES -F -t nat (清空nat表) -p ：協定：tcp、upd、icmp... -m ：模組：state、mac、limit、owner、multiport... -m state --state : 新的（NEW） — 某個封包請求開啟新的連線，例如 HTTP 請求。 已建立（ESTABLISHED） — 屬於某個現有連線的封包。 相關的（RELATED） — 屬於現有連線的封包，請求開啟一個新的連線，例如被動式 FTP 的連線，其連接埠為 20；但資料傳輸埠則是 1024 以上，未使用的連接埠。 無效的（INVALID） — 在連結追蹤表中，不屬於任何連線的封包。 lo : 只要是本机进程内相互访问的，都会去到lo这张网卡上，所以在外部IP时对于iptables选择的是eth0这样的网卡，要捕获本机时是lo这个网卡 -o ：網路介面：-o 為 out 網路介面就填 eth0... (用於 POSTROUTING、OUTPUT、FORWARD) -i ：網路介面：-i 為 in 網路介面就填 eth0... (用於 PREROUTING、INPUT、FORWARD) -s ：來源：可為 IP Address、IP 網段、網域名稱 --sport：指定封包來源 Port、Port Range (配合 -p tcp、-p udp) -d ：目的地：可為 IP、IP 網段、網域名稱 --dport：指定封包目的地 Port、Port Range (配合 -p tcp、-p udp) -j ：政策 / 目標：ACCEPT、DROP、REJECT、SNAT、DNAT、MASQUERADE、REDIRECT、RETURN... ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-iptables%E5%8F%83%E6%95%B8/100_hufccc25f98c07fbd5a07eedc8b57cae89_16682_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/linux-iptables%E5%8F%83%E6%95%B8/","title":"Linux-Iptables參數"},{"content":"iptables -A [規則] [-s 要動作的IP] [-d 目的地IP] [-p 協定] [-j 動作] 查看目前設定 iptables -nL 清除所有規則鏈中的規則 iptables -F\t(不能透過SSH操作,不然會鎖住) 清除使用者自訂鏈中的規則 iptables -X\t(不能透過SSH操作,不然會鎖住) 清除mangle表中，所有規則鏈中的規則 iptables -F -t mangle\t(不能透過SSH操作,不然會鎖住) 查看IP鎖了幾個 iptables -n --list pig|wc -l 查看此IP有沒有被鎖在裡面 iptables -nL |grep XXX 增加規則except允許此IP 80 port通過 iptables -A except -p tcp -s XXX/32 --dport 80 -j ACCEPT 刪除規則pig此IP iptables -D pig -s XXX -j DROP 查看INPUT裡的規則此IP iptables -L INPUT -n --line-numbers |grep \u0026quot;XXX\u0026quot; 以數字的方式顯示pig的總數 iptables -n --list pig|wc -l 新建機器執行增加火牆規則 ./root/iptables/ipfish.sh iptables 刪除某行規則 增加此行規則 iptables -A INPUT -s 123.123.123.123 -j DROP # 將 123.123.123.123 全部擋掉 列出所有規則，前面加上行號 iptables -L INPUT -n --line-numbers 要刪除某一行的規則 iptables -D INPUT 1 # 若只有上述那行，那就是 1 iptables -D INPUT 3 # 若有多行，只要刪除第三行 保存iptables規則 iptables-save \u0026gt;rules-0 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-iptables%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/100_hufccc25f98c07fbd5a07eedc8b57cae89_16682_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/linux-iptables%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/","title":"Linux-Iptables常用語法"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 daily ：指定轉儲週期爲每天 weekly ：指定轉儲週期爲每週 monthly ：指定轉儲週期爲每月 rotate count ：指定日誌文件刪除之前轉儲的次數，0 指沒有備份，5 指保留 5 個備份 tabooext [+] list：讓 logrotate 不轉儲指定擴展名的文件，缺省的擴展名是：.rpm-orig, .rpmsave, v, 和～ missingok：在日誌輪循期間，任何錯誤將被忽略，例如 “文件無法找到” 之類的錯誤。 size size：當日志文件到達指定的大小時才轉儲，bytes (缺省) 及 KB (sizek) 或 MB (sizem) compress： 通過 gzip 壓縮轉儲以後的日誌 nocompress： 不壓縮 copytruncate：用於還在打開中的日誌文件，把當前日誌備份並截斷 nocopytruncate： 備份日誌文件但是不截斷 create mode owner group ： 轉儲文件，使用指定的文件模式創建新的日誌文件 nocreate： 不建立新的日誌文件 delaycompress： 和 compress 一起使用時，轉儲的日誌文件到下一次轉儲時才壓縮 nodelaycompress： 覆蓋 delaycompress 選項，轉儲同時壓縮。 errors address ： 專儲時的錯誤信息發送到指定的 Email 地址 ifempty ：即使是空文件也轉儲，這個是 logrotate 的缺省選項。 notifempty ：如果是空文件的話，不轉儲 mail address ： 把轉儲的日誌文件發送到指定的 E-mail 地址 nomail ： 轉儲時不發送日誌文件 olddir directory：儲後的日誌文件放入指定的目錄，必須和當前日誌文件在同一個文件系統 noolddir： 轉儲後的日誌文件和當前日誌文件放在同一個目錄下 prerotate/endscript： 在轉儲以前需要執行的命令可以放入這個對，這兩個關鍵字必須單獨成行 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-logrotate-%E5%8F%83%E6%95%B8/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-logrotate-%E5%8F%83%E6%95%B8/","title":"Linux-Logrotate 參數"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 yum install epel-release yum install nodejs wget https://nodejs.org/download/release/v8.9.4/node-v8.9.4-linux-x64.tar.gz tar --strip-components 1 -xzvf node-v* -C /usr/local node -v npm -v ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-nodejs-%E5%AE%89%E8%A3%9D/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-nodejs-%E5%AE%89%E8%A3%9D/","title":"Linux-Nodejs-安裝"},{"content":"################################### http://download.redis.io/releases/ ################################### wget - tar-zxvf - cd - ################################### make MALLOC=libc make PREFIX=/usr/local/redis install ################################### Redis配置 ################################### mkdir /usr/local/redis/etc/ cp redis.conf /usr/local/redis/etc/ cd /usr/local/redis/bin/ cp redis-benchmark redis-cli redis-server /usr/bin/ ################################### 修改redis配置 ################################### vim /usr/local/redis/etc/redis.conf bind 0.0.0.0 daemonize yes ################################### vim redis ( 腳本 ) ################################### #!/bin/bash #chkconfig: 2345 80 90 # Simple Redis init.d script conceived to work on Linux systems # as it does use of the /proc filesystem. PATH=/usr/local/bin:/sbin:/usr/bin:/bin REDISPORT=6379 EXEC=/usr/local/redis/bin/redis-server REDIS_CLI=/usr/local/redis/bin/redis-cli PIDFILE=/var/run/redis_6379.pid CONF=\u0026quot;/usr/local/redis/etc/redis.conf\u0026quot; case \u0026quot;$1\u0026quot; in start) if [ -f $PIDFILE ] then echo \u0026quot;$PIDFILE exists, process is already running or crashed\u0026quot; else echo \u0026quot;Starting Redis server...\u0026quot; $EXEC $CONF fi if [ \u0026quot;$?\u0026quot;=\u0026quot;0\u0026quot; ] then echo \u0026quot;Redis is running...\u0026quot; fi ;; stop) if [ ! -f $PIDFILE ] then echo \u0026quot;$PIDFILE does not exist, process is not running\u0026quot; else PID=$(cat $PIDFILE) echo \u0026quot;Stopping ...\u0026quot; $REDIS_CLI -p $REDISPORT SHUTDOWN while [ -x ${PIDFILE} ] do echo \u0026quot;Waiting for Redis to shutdown ...\u0026quot; sleep 1 done echo \u0026quot;Redis stopped\u0026quot; fi ;; restart|force-reload) ${0} stop ${0} start ;; *) echo \u0026quot;Usage: /etc/init.d/redis {start|stop|restart|force-reload}\u0026quot; \u0026gt;\u0026amp;2 exit 1 esac ################################### cp redis /etc/init.d/ chmod 755 /etc/init.d/redis ################################### chkconfig --list\t# 查看服務列表 chkconfig --add redis\t# 添加服務 chkconfig --level 2345 redis on\t# 配制啟動級別 ################################### systemctl start redis ################################### ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-redis-%E7%B7%A8%E8%AD%AF%E5%AE%89%E8%A3%9D/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-redis-%E7%B7%A8%E8%AD%AF%E5%AE%89%E8%A3%9D/","title":"Linux-REDIS-編譯安裝"},{"content":"新增yum源 tee /etc/yum.repos.d/influxdb.repo \u0026lt;\u0026lt;-'EOF' [influxdb] name = InfluxDB Repository - RHEL \\$releasever baseurl = https://repos.influxdata.com/rhel/6Server/x86_64/stable enabled = 1 gpgcheck = 1 gpgkey = https://repos.influxdata.com/influxdb.key EOF 安裝telegraf服務 yum -y install telegraf 安裝telnet測試連線 yum -y install telnet 修改設定 vim /etc/telegraf/telegraf.conf [[outputs.influxdb]] urls = [\u0026quot;http://XXX.XXX.XXX.XXX:8086\u0026quot;] database = \u0026quot;XXX\u0026quot; username = \u0026quot;XXX\u0026quot; password = \u0026quot;XXX\u0026quot; 增加監控模組 [[inputs.net]] [[inputs.netstat]] 確認telegraf-server 的 8086 port有通 telnet XXX.XXX.XXX.XXX 8086 ----------------------------------------------------------------------- 啟動 telegraf service telegraf start -------------------------- ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-telegraf-%E8%92%90%E9%9B%86%E8%B3%87%E6%96%99%E8%87%B3influxdb/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-telegraf-%E8%92%90%E9%9B%86%E8%B3%87%E6%96%99%E8%87%B3influxdb/","title":"Linux-Telegraf-蒐集資料至InfluxDB"},{"content":"vim /etc/vimrc 標註行數 第 10 行加上 set nu ############################################################################################### 1. 選定文字塊。使用v進入可視模式,移動游標鍵選定內容。 2.複製的命令是y,即yank(提起) ,常用的命令如下: y 在使用v模式選定了某一塊的時候,複製選定塊到緩衝區用; yy 複製整行(nyy或者yny ,複製n行,n為數字); y^ 複製當前到行頭的內容; y$ 複製當前到行尾的內容; yw 複製一個word (nyw或者ynw,複製n個word,n為數字); yG 複製至檔尾(nyG或者ynG,複製到第n行,例如1yG或者y1G,複製到檔尾) 3. 剪下的命令是d,即delete,d與y命令基本類似,所以兩個命令用法一樣,包括含有數字的用法. d 剪下選定塊到緩衝區; dd 剪下整行 d^ 剪下至行首 d$ 剪下至行尾 dw 剪下一個word dG 剪下至檔尾 4. 貼上的命令式p,即put(放下) p 小寫p代表貼至遊標後(下),因為遊標是在具體字元的位置上,所以實際是在該字元的後面 P 大寫P代表貼至遊標前(上) 整行的複製貼上在遊標的上(下)一行,非整行的複製則是貼上在遊標的前(後) 注: 在正則表示式中,^表示匹配字串的開始位置,$表示匹配字串的結束位置。 命令前面加數字表示重複的次數,加字母表示使用的緩衝區名稱。使用英文句號\u0026quot;.\u0026quot;可以重複上一個命令。 在複製貼上時,另一組常用的命令是u(撤銷操作),U(撤銷某一行最近所有修改),Ctrl+R(重做),這些功能主要是vim中的,vi中略有差別 ############################################################################################### ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-vim%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-vim%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/","title":"Linux-VIM常用指令"},{"content":"新增帳號+ide useradd XXXide su - XXXide ssh-keygen 一路按Enter cd /home/XXXide/.ssh/ 使用putty-keygen.exe 製作 authorized_keys內容 按下Generate (滑鼠在進度調上游移會快一點) 跑完後 複製上面的內容貼進帳號的.ssh/authorized_keys再給權限600 chmod 600 .ssh/authorized_keys 按下save pubilc key 儲存檔案 andyide.pub 按下save private key 儲存檔案 andyide.ppk (若PPK連不進去，可以將PPK轉PEM) \u0026gt;\u0026gt; 先import_key *.ppk 後在 Export_key *.pem 再將帳號登入權限的bash拿掉 vim /etc/passwd /bin/bash \u0026gt;\u0026gt;/sbin/nologin ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E4%BD%BF%E7%94%A8puttygen%E7%94%A2%E7%94%9Fssh%E9%80%A3%E7%B7%9Akey/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E4%BD%BF%E7%94%A8puttygen%E7%94%A2%E7%94%9Fssh%E9%80%A3%E7%B7%9Akey/","title":"Linux-使用PuTTYgen產生SSH連線key"},{"content":"找出殭屍程序 ps -Al | grep -w Z 從找到的程序資訊中，分析出 pid ps -Al | grep -w Z | awk '{print $4}' 將分析出來的 pid 串連成一個陣列 ps -Al | grep -w Z | awk '{print $4}' | xargs 將陣列中的每一個 pid 的程序，利用 kill 來終止、刪除它們 ps -Al | grep -w Z | awk '{print $4}' | xargs sudo kill -9 若再跑一次 ps -Al | grep -w Z 還是看到有 zombie process 先確認父程序資訊 ps -Al | grep -w Z | awk '{print $5}' | xargs ps -lp 再確認相依的子程序資訊 ps -Al | grep -w Z | awk '{print $5}' | xargs ps -l --ppid 如果其中沒有重要程序或是其他正在執行中程序的話，就可以安心地將父程序給刪除掉 ps -Al | grep -w Z | awk '{print $5}' | xargs sudo kill -9 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E5%88%AA%E9%99%A4%E6%AE%AD%E5%B1%8D%E7%A8%8B%E5%BA%8F/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E5%88%AA%E9%99%A4%E6%AE%AD%E5%B1%8D%E7%A8%8B%E5%BA%8F/","title":"Linux-刪除殭屍程序"},{"content":"新增yum源 tee /etc/yum.repos.d/influxdb.repo \u0026lt;\u0026lt;-'EOF' [influxdb] name = InfluxDB Repository - RHEL \\$releasever baseurl = https://repos.influxdata.com/rhel/6Server/x86_64/stable enabled = 1 gpgcheck = 1 gpgkey = https://repos.influxdata.com/influxdb.key EOF 安裝telegraf服務 yum -y install telegraf yum -y install telnet 修改設定 vim /etc/telegraf/telegraf.conf [[outputs.influxdb]] urls = [\u0026quot;http://172.15.1.251:8086\u0026quot;] database = \u0026quot;telegraf\u0026quot; username = \u0026quot;telegraf\u0026quot; password = \u0026quot;metrics\u0026quot; [[inputs.net]] [[inputs.netstat]] 確認telegraf-server 的 8086 port有通 telnet 172.15.1.251 8086 ----------------------------------------------------------------------- 啟動 telegraf service telegraf start -------------------------- ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E5%AE%89%E8%A3%9Dtelegraf-agent%E5%AF%A6%E7%8F%BE%E7%9B%A3%E6%8E%A7/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E5%AE%89%E8%A3%9Dtelegraf-agent%E5%AF%A6%E7%8F%BE%E7%9B%A3%E6%8E%A7/","title":"Linux-安裝telegraf-agent實現監控"},{"content":"#!/bin/bash while [ \u0026quot;i\u0026quot; != \u0026quot;1\u0026quot; ] do echo -n new user name: read name useradd $name echo \u0026quot;123456\u0026quot; | passwd --stdin $name echo finish new user name is:$name done sed -i \u0026quot;s/GSSAPIAuthentication yes/GSSAPIAuthentication no/g\u0026quot; /etc/ssh/sshd_config sed -i \u0026quot;s/#UseDNS yes/UseDNS no/g\u0026quot; /etc/ssh/sshd_config service sshd restart ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E5%BB%BA%E7%AB%8B%E6%96%B0%E5%A2%9E%E4%BD%BF%E7%94%A8%E8%80%85%E7%9A%84shell/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E5%BB%BA%E7%AB%8B%E6%96%B0%E5%A2%9E%E4%BD%BF%E7%94%A8%E8%80%85%E7%9A%84shell/","title":"Linux-建立新增使用者的shell"},{"content":"解決RAM不足問題 - 在 LINUX 新增 SWAP 虛擬記憶體 以一台 1Gb 記憶體的主機而言，我們在這裡建立 2G的 Swap 虛擬記憶體儲存空間 cd / fallocate -l 2G swapfile chmod 600 swap-sda1 初始化 Swap 空間 透過 mkswap 將 /swapfile 建立為 Linux 交換區，讓這個資料夾被分割為一個磁碟區 mkswap /swapfile 啟動交換區 swapon /swapfile 開機啟動 swapon -s 如果不使用，可透過以下指令終止： sudo swapoff /swapfile 如果想先主要以實體記憶體為主，swap 為輔，可以透過 swappiness 來設定分配方式 sysctl vm.swappiness=10 \u0026gt;\u0026gt; 預設通常會是 60 （值越高，表示會越優先使用 swap，範圍 0~100） 開機自動設定 echo \u0026quot;vm.swappiness=10\u0026quot; \u0026gt;\u0026gt; /etc/sysctl.conf\u0026quot; ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E6%96%B0%E5%A2%9Eswap%E8%A8%98%E6%86%B6%E9%AB%94/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E6%96%B0%E5%A2%9Eswap%E8%A8%98%E6%86%B6%E9%AB%94/","title":"Linux-新增SWAP記憶體"},{"content":"查看当前文件目录各个文件夹大小 du -h --max-depth=1 |sort -hr (排序) 查看指定目錄 du -h --max-depth=1 /path 查看當層目錄 du -h - . 深入到第一層目錄 --max-depth=1 查看當前目錄下user目錄的大小，并不想看其他目錄以及其子目錄 du -sh user 要通過以1024字節為單位顯示一個目錄樹及其每個子樹的磁盤使用情况 du -k /home/linux 以MB為單位顯示一個目錄樹及其每個子樹的磁盤使用情况 du -m /home/linux 以GB為單位顯示一個目錄樹及其每個子樹的磁盤使用情况 du -g /home/linux 列出當前目錄中的目錄名不包括xyz字符串的目錄的大小 du -h --exclude='*xyz*' 只顯示一個目錄樹的全部磁盤使用情况 du -s /home/linux ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E6%9F%A5%E7%9C%8B%E7%95%B6%E5%89%8D%E6%96%87%E4%BB%B6%E7%9B%AE%E9%8C%84%E5%A4%A7%E5%B0%8F/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E6%9F%A5%E7%9C%8B%E7%95%B6%E5%89%8D%E6%96%87%E4%BB%B6%E7%9B%AE%E9%8C%84%E5%A4%A7%E5%B0%8F/","title":"Linux-查看當前文件目錄大小"},{"content":"手機先下載APP app store: Twilio Authy googleplay store: Twilio Authy 2-Factor Authentication ------------------------------------------------------------ 輸入使用要設定的帳號輸入 su - nadal $ google-authenticator \u0026gt; 按y按到結束 \u0026gt;帳號家目錄下面會有一支 .google_authenticator #mkdir /home/gauth/username/ 將 .google_authenticator 移動到/home/gauth/username/ 下面 #mv /home/username/.google_authenticator /home/gauth/username/ 權限改給root #chown root.root /home/gauth/username/.google_authenticator 再將上面顯示的網址 輸入到瀏覽器即可得到一張QR Code 再使用APP掃瞄那張QR Code即可成功加入設定 ------------------------------------------------------------ 使用XShell登入時 選擇下面的 keyboard Interactive 登入 第一次輸入密碼 第二次輸入 APP顯示的六位數字 即可登入 機器服務安裝教學: https://shenyu.me/2016/09/05/centos-google-authenticator.html --------------------------------------------------------------------------------------------------- 機器服務安裝步驟 安裝依賴套件 yum -y install gcc make pam-devel libpng-devel libtool wget git 直接安裝EPEL源RPM包 #CentOS 6 rpm -Uvh http://mirrors.ustc.edu.cn/fedora/epel/epel-release-latest-6.noarch.rpm # CentOS 7 rpm -Uvh http://mirrors.ustc.edu.cn/fedora/epel/epel-release-latest-7.noarch.rpm 安裝Qrencode，谷歌身份驗證器需要調用該程序生成二維碼並顯示 yum install -y qrencode 安裝谷歌身份驗證器 git clone https://github.com/google/google-authenticator-libpam.git cd google-authenticator-libpam/ 編譯並安裝 ./bootstrap.sh ./configure --prefix=/usr/local/google-authenticator make \u0026amp;\u0026amp; make install 複製google身份驗證器pam模塊到系統下 cp /usr/local/google-authenticator/lib/security/pam_google_authenticator.so /lib64/security/ 建立指令連結到環境變數 ln -s /usr/local/google-authenticator/bin/google-authenticator /usr/bin/ 配置/etc/pam.d/sshd 在 auth substack password-auth 下面 新增 auth required pam_google_authenticator.so user=root secret=/home/gauth/${USER}/.google_authenticator nullok 配置SSH服務 vim /etc/ssh/sshd_config 修改以下參數 ChallengeResponseAuthentication yes PasswordAuthentication no PubkeyAuthentication yes UsePAM yes 重啟ssh服務 service sshd restart ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E6%A9%9F%E5%99%A8%E7%99%BB%E5%85%A5%E4%BA%8C%E9%9A%8E%E6%AE%B5%E8%AA%8D%E8%AD%89mfa/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E6%A9%9F%E5%99%A8%E7%99%BB%E5%85%A5%E4%BA%8C%E9%9A%8E%E6%AE%B5%E8%AA%8D%E8%AD%89mfa/","title":"Linux-機器登入二階段認證MFA"},{"content":"mkdir /root/logrotate/ ------------------------------------ vim /root/logrotate/logrotate.sh #!/bin/bash /usr/sbin/logrotate -f /root/logrotate/weblog ------------------------------------ vim /root/logrotate/weblog /usr/local/web/nginx/logs/*.acc { daily #表示每天一份 rotate 3 #設定保留份數 create sharedscripts #加上這個指令的話就等於只會執行一次 postrotate #在 endscript 的區間內是 rotate 結束後會執行的指令 /usr/local/web/nginx/sbin/nginx -s reload endscript } ------------------------------------ crontab -e 10 05 * * * sh /root/logrotate/logrotate.sh ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/linux-%E8%A8%AD%E5%AE%9Alogrotate-%E8%BC%AA%E8%A9%A2/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/linux-%E8%A8%AD%E5%AE%9Alogrotate-%E8%BC%AA%E8%A9%A2/","title":"Linux-設定logrotate 輪詢"},{"content":"vim /etc/yum.repos.d/MariaDB.repo # MariaDB 10.1 CentOS repository list - created 2017-01-27 16:31 UTC # http://downloads.mariadb.org/mariadb/repositories/ [mariadb] name = MariaDB baseurl = http://yum.mariadb.org/10.1/centos7-amd64 gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB gpgcheck=1 ########################################## yum install MariaDB-server MariaDB-client mysql_secure_installation\t#初始化 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/mariadb-yum%E5%AE%89%E8%A3%9D/100_hueeb4492b0b81c68892f21faabb865a40_40928_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mariadb-yum%E5%AE%89%E8%A3%9D/","title":"MariaDB-yum安裝"},{"content":"Master: mysql -u root -p MariaDB [(none)]\u0026gt; STOP SLAVE; MariaDB [(none)]\u0026gt; GRANT REPLICATION SLAVE ON *.* TO '輸入使用者名稱'@'輸入來源 + %' IDENTIFIED BY '輸入密碼'; FLUSH PRIVILEGES; FLUSH TABLES WITH READ LOCK; SHOW MASTER STATUS; exit; ############################################ mysqldump --all-databases --user=root --password --master-data \u0026gt; masterdatabase.sql ############################################ mysql -u root -p MariaDB [(none)]\u0026gt; UNLOCK TABLES; MariaDB [(none)]\u0026gt; exit ############################################ scp masterdatabase.sql root@輸入slave主機來源:/home ############################################ Slave: 將master的SQL檔匯入slave mysql -u root -p \u0026lt; /home/masterdatabase.sql systemctl restart mariadb ############################################ mysql -u root -p MariaDB [(none)]\u0026gt; STOP SLAVE; MariaDB [(none)]\u0026gt; CHANGE MASTER TO MASTER_HOST='輸入Master主機ip', MASTER_USER='輸入使用者名稱', MASTER_PASSWORD='輸入密碼', MASTER_LOG_FILE='mariadb-bin.000001', MASTER_LOG_POS=479; start slave; reset slave; SHOW SLAVE STATUS\\G; ############################################ ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/mariadb-%E4%B8%BB%E5%BE%9E%E8%B7%9F%E9%9A%A8/100_hueeb4492b0b81c68892f21faabb865a40_40928_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mariadb-%E4%B8%BB%E5%BE%9E%E8%B7%9F%E9%9A%A8/","title":"MariaDB-主從跟隨"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 背景啟動 mysqld_safe \u0026amp; 停掉服務 mysqladmin -u root -p shutdown 創建密碼 mysqladmin -u root password \u0026#39;密碼\u0026#39; 列出該 database_name 所有資料表 mysqlshow -u user_name -p db_name 檢視伺服器埠 show global variables like \u0026#39;port\u0026#39;; 查詢ID SHOW VARIABLES LIKE \u0026#39;%server_%\u0026#39;; 忘記密碼時在my.cnf增加參數 [mysqld] skip-grant-tables 在mysql介面執行更改密碼 use mysql; UPDATE user SET Password = password(\u0026#39;123456\u0026#39;) WHERE User = \u0026#39;root\u0026#39;; 檢查是否有支援 Partition SHOW PLUGINS; SELECT PLUGIN_NAME as Name, PLUGIN_VERSION as Version, PLUGIN_STATUS as Status FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_TYPE=\u0026#39;STORAGE ENGINE\u0026#39;; 若要關閉 partition 支援，可在 my.cnf 加上 skip-partition，再重新啟動 查看型號 mysql\u0026gt; select version(); 或是在Linux介面執行 mysql -V 查看表的存储引擎 show create table proc \\G 直接更改存储引擎 alter table UserConf engine=MyISAM;\t顯示數據表結構： describe 表名; 查看MySQL的時間 select now(); 查看MySQL時區 show variables like \u0026#34;%time_zone%\u0026#34;; 顯示哪個執行緒正在運行 SHOW PROCESSLIST; 顯示資料表的欄位 show columns from 資料表名稱; 顯示user裡的資料 SELECT * FROM user \\G 新增帳號 CREATE USER \u0026#39;laurance\u0026#39;@\u0026#39;10.10.%.%\u0026#39; IDENTIFIED BY \u0026#39;123456\u0026#39;; 給予全部權限 grant all on *.* to \u0026#39;laurance\u0026#39;@\u0026#39;10.10.%.%\u0026#39;; 修改使用者 update user set User=\u0026#39;laurance\u0026#39; where User=\u0026#39;root\u0026#39;; 刪除使用者 drop user \u0026#39;laurance\u0026#39;@\u0026#39;localhost\u0026#39;; 查看使用者權限 show grants for \u0026#39;laurance\u0026#39;@\u0026#39;localhost\u0026#39;; 安裝MySQL密碼強度插件 INSTALL PLUGIN validate_password SONAME \u0026#39;validate_password.so\u0026#39;; 臨時改密碼強度規則 SET GLOBAL validate_password_policy=LOW; 查看密碼強度規則 show variables like \u0026#39;validate_pass%\u0026#39;; 查看密碼長度規則 select @@validate_password_length; 更換主從語法 change master to MASTER_HOST=\u0026#39;10.10.10.10\u0026#39;, MASTER_USER=\u0026#39;laurance\u0026#39;, MASTER_PASSWORD=\u0026#39;123456\u0026#39;, MASTER_LOG_FILE=\u0026#39;log-bin.000018\u0026#39;, MASTER_LOG_POS=815722; 查詢MySQL密碼 select * from mysql.user \\G 將*開頭的亂碼貼到MD5解 https://www.cmd5.com/ 重新設為預設資料庫 mysql_install_db --datadir=/var/lib/mysql/master01/ --user=mysql \u0026amp; 新增 TABLE CREATE TABLE ithelp1007a( id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, class CHAR(1) NOT NULL, name CHAR(20) NOT NULL, score TINYINT UNSIGNED NOT NULL ); 插入 TABLE INSERT INTO ithelp1007a(class, name, score) VALUES (\u0026#39;A\u0026#39;, \u0026#39;Tom\u0026#39;, 78), (\u0026#39;A\u0026#39;, \u0026#39;Mary\u0026#39;, 25), (\u0026#39;A\u0026#39;, \u0026#39;John\u0026#39;, 65), (\u0026#39;B\u0026#39;, \u0026#39;Hitomi\u0026#39;, 95), (\u0026#39;B\u0026#39;, \u0026#39;Asami\u0026#39;, 84), (\u0026#39;B\u0026#39;, \u0026#39;Keiko\u0026#39;, 73); ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/mysql-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/100_hueeb4492b0b81c68892f21faabb865a40_40928_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mysql-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/","title":"MySQL-常用語法"},{"content":"備份單一資料庫 mysqldump -h hostname -u root -p database_name \u0026gt; backup.sql; 備份資料庫中單一資料表 mysqldump -u root -p database_name table_name \u0026gt; backup.sql; 匯出資料庫中的某張資料表的表結構（不含資料） mysqldump -u username -p -d dbname tablename \u0026gt; tablename.sql 備份資料庫中多張資料表 mysqldump -u root -p database_name table1 table2 \u0026gt; backup.sql; 備份多個資料庫 mysqldump -u root -p --databases db1 db2 \u0026gt; backup.sql; 備份所有資料庫 mysqldump -u root -p --all-databases \u0026gt; backup.sql; 匯出資料庫結構（不含資料） mysqldump -u username -p -d dbname \u0026gt; dbname.sql ---------------------------- 復原單一資料庫 mysql -u root -p database_name \u0026lt; backup.sql 復原多個資料庫 mysql -u root -p \u0026lt; backup.sql ---------------------------- ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/mysqldump-%E5%82%99%E4%BB%BD%E9%82%84%E5%8E%9F%E8%B3%87%E6%96%99%E5%BA%AB/100_hueeb4492b0b81c68892f21faabb865a40_40928_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/mysqldump-%E5%82%99%E4%BB%BD%E9%82%84%E5%8E%9F%E8%B3%87%E6%96%99%E5%BA%AB/","title":"Mysqldump-備份\u0026還原資料庫"},{"content":"#定義Nginx運行的用戶和用戶組 user www www; #nginx進程數，建議設置為等於CPU總核心數。 worker_processes 8; #全局錯誤日誌定義類型，[ debug | info | notice | warn | error | crit ] error_log /var/log/nginx/error.log info; #進程文件 pid /var/run/nginx.pid; #一個nginx進程打開的最多文件描述符數目，理論值應該是最多打開文件數（系統的值ulimit -n）與nginx進程數相除，但是nginx分配請求並不均勻，所以建議與ulimit -n的值保持一致。 worker_rlimit_nofile 65535; #工作模式與連接數上限 events { #參考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型是Linux 2.6以上版本內核中的高性能網絡I/O模型，如果跑在FreeBSD上面，就用kqueue模型。 use epoll; #單個進程最大連接數（最大連接數=連接數*進程數） worker_connections 65535; } #設定http伺服器 http { include mime.types; #文件擴展名與文件類型映射表 default_type application/octet-stream; #默認文件類型 #charset utf-8; #默認編碼 server_names_hash_bucket_size 128; #伺服器名字的hash表大小 client_header_buffer_size 32k; #上傳文件大小限制 large_client_header_buffers 4 64k; #設定請求緩 client_max_body_size 8m; #設定請求緩 sendfile on; #開啟高效文件傳輸模式，sendfile指令指定nginx是否調用sendfile函數來輸出文件，對於普通應用設為 on，如果用來進行下載等應用磁碟IO重負載應用，可設置為off，以平衡磁碟與網絡I/O處理速度，降低系統的負載。注意：如果圖片顯示不正常把這個改成off。 autoindex on; #開啟目錄列表訪問，合適下載伺服器，默認關閉。 tcp_nopush on; #防止網絡阻塞 tcp_nodelay on; #防止網絡阻塞 keepalive_timeout 120; #長連接超時時間，單位是秒 #FastCGI相關參數是為了改善網站的性能：減少資源占用，提高訪問速度。下面參數看字面意思都能理解。 fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffer_size 64k; fastcgi_buffers 4 64k; fastcgi_busy_buffers_size 128k; fastcgi_temp_file_write_size 128k; #gzip模塊設置 gzip on; #開啟gzip壓縮輸出 gzip_min_length 1k; #最小壓縮文件大小 gzip_buffers 4 16k; #壓縮緩衝區 gzip_http_version 1.0; #壓縮版本（默認1.1，前端如果是squid2.5請使用1.0） gzip_comp_level 2; #壓縮等級 gzip_types text/plain application/x-javascript text/css application/xml; #壓縮類型，默認就已經包含text/html，所以下面就不用再寫了，寫上去也不會有問題，但是會有一個warn。 gzip_vary on; #limit_zone crawler $binary_remote_addr 10m; #開啟限制IP連接數的時候需要使用 upstream blog.ha97.com { #upstream的負載均衡，weight是權重，可以根據機器配置定義權重。weigth參數表示權值，權值越高被分配到的機率越大。 server 192.168.80.121:80 weight=3; server 192.168.80.122:80 weight=2; server 192.168.80.123:80 weight=3; } #虛擬主機的配置 server { #監聽埠 listen 80; #域名可以有多個，用空格隔開 server_name www.ha97.com ha97.com; index index.html index.htm index.php; root /data/www/ha97; location ~ .*\\.(php|php5)?$ { fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi.conf; } #圖片緩存時間設置 location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$ { expires 10d; } #JS和CSS緩存時間設置 location ~ .*\\.(js|css)?$ { expires 1h; } #日誌格式設定 log_format access '$remote_addr - $remote_user [$time_local] \u0026quot;$request\u0026quot; ' '$status $body_bytes_sent \u0026quot;$http_referer\u0026quot; ' '\u0026quot;$http_user_agent\u0026quot; $http_x_forwarded_for'; #定義本虛擬主機的訪問日誌 access_log /var/log/nginx/ha97access.log access; #對 \u0026quot;/\u0026quot; 啟用反向代理 location / { proxy_pass http://127.0.0.1:88; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; #後端的Web伺服器可以通過X-Forwarded-For獲取用戶真實IP proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #以下是一些反向代理的配置，可選。 proxy_set_header Host $host; client_max_body_size 10m; #允許客戶端請求的最大單文件字節數 client_body_buffer_size 128k; #緩衝區代理緩衝用戶端請求的最大字節數， proxy_connect_timeout 90; #nginx跟後端伺服器連接超時時間(代理連接超時) proxy_send_timeout 90; #後端伺服器數據回傳時間(代理髮送超時) proxy_read_timeout 90; #連接成功後，後端伺服器響應時間(代理接收超時) proxy_buffer_size 4k; #設置代理伺服器（nginx）保存用戶頭信息的緩衝區大小 proxy_buffers 4 32k; #proxy_buffers緩衝區，網頁平均在32k以下的設置 proxy_busy_buffers_size 64k; #高負荷下緩衝大小（proxy_buffers*2） proxy_temp_file_write_size 64k; #設定緩存文件夾大小，大於這個值，將從upstream伺服器傳 } #設定查看Nginx狀態的地址 location /NginxStatus { stub_status on; access_log on; auth_basic \u0026quot;NginxStatus\u0026quot;; auth_basic_user_file conf/htpasswd; #htpasswd文件的內容可以用apache提供的htpasswd工具來產生。 } #本地動靜分離反向代理配置 #所有jsp的頁面均交由tomcat或resin處理 location ~ .(jsp|jspx|do)?$ { proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://127.0.0.1:8080; } #所有靜態文件由nginx直接讀取不經過tomcat或resin location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ { expires 15d; } location ~ .*.(js|css)?$ { expires 1h; } } } ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/nginx-config%E9%85%8D%E7%BD%AE/100_hud639c4e125de7e8ad17e2519279d4fee_29636_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/nginx-config%E9%85%8D%E7%BD%AE/","title":"Nginx-Config配置"},{"content":"############################################################################# Location可以有以下几种形式 : =\t精确匹配 ～\t正则匹配,大小写敏感 ～*\t正则匹配, 大小写不敏感 ^~\t忽略正则表达式的前缀匹配 没有修饰符,前缀匹配 @\t命名location,可用来做内部重定向 其中=和^~修饰符都可以認為是特殊形式的前缀匹配 ############################################################################# location{ default_type text/html ;\t# return 輸出為文字 } ############################################################################# Location Example * : server { listen 80 default_server; server_name _; # A location = / { return 200 \u0026quot;A\u0026quot;; } # B location / { return 200 \u0026quot;B\u0026quot;; } # C location /docs { return 200 \u0026quot;C\u0026quot;; } # D location ^~ /imgs { return 200 \u0026quot;D\u0026quot;; } # E location ~* \\.(gif|jpg|png)$ { return 200 \u0026quot;E\u0026quot;; } # F location ~ /a/.*$ { return 200 \u0026quot;F\u0026quot;; } } ############################################################################# input\toutput\t说明 http://127.0.0.1\tA\t匹配到A跟B,精确匹配优先级较高 http://127.0.0.1/test\tB\t只匹配到B http://127.0.0.1/docs/1\tC\t匹配到B跟C,C前缀比B长 http://127.0.0.1/docs/2.jpg\tE\t匹配到B、C、E，正则匹配比普通前缀匹配优先级高 http://127.0.0.1/imgs/1\tD\t只匹配到B、D,D前缀比B长 http://127.0.0.1/imgs/1.jpg\tD\t匹配到B、D、E，由于D是最长匹配且有^~修饰符， 所以不会再检查正则匹配 http://127.0.0.1/docs/a/1\tF\t匹配到B、C、F ############################################################################# Location @name的用法 @前缀可以用来定义一个命名的location,该location不处理正常的外部请求,一般用来供内部重定向使用。 它们不能嵌套,也不能包含嵌套的location。 Location Example * location /try { try_files $uri $uri/ @name; } location /error { error_page 404 = @name; return 404; } location @name { return 200 \u0026quot;@name\u0026quot;; } # 这时访问/try或者/error都会返回\u0026quot;@name\u0026quot; ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/nginx-location%E5%8F%83%E6%95%B8/100_hud639c4e125de7e8ad17e2519279d4fee_29636_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/nginx-location%E5%8F%83%E6%95%B8/","title":"Nginx-Location參數"},{"content":"引數 說明 示例 $remote_addr 客戶端地址 192.168.122.1 $remote_user 客戶端使用者名稱稱 -- $time_local 訪問時間和時區 17/Dec/2018:10:47:58 +0800 $request 請求的URI和HTTP協議 \u0026quot;GET / HTTP/1.1\u0026quot; $status HTTP請求狀態 304 $upstream_status upstream狀態 0 $body_bytes_sent 傳送給客戶端檔案內容大小 - $http_referer url跳轉來源,用於記錄是從哪個頁面連結訪問過來的 $http_user_agent 使用者終端瀏覽器等資訊,即客戶瀏覽器的相關資訊 \u0026quot;Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\u0026quot; $http_host 請求地址，即瀏覽器中你輸入的地址（IP或域名） www.wang.com 192.168.100.100 $ssl_protocol SSL協議版本 TLSv1 $ssl_cipher 交換資料中的演算法 RC4-SHA $upstream_addr 後臺upstream的地址，即真正提供服務的主機地址 10.10.10.100:80 $request_time 整個請求的總時間 0.205 $upstream_response_time 請求過程中，upstream響應時間 0.002 $http_x_forwarded_for\t客户端的真实ip 如果包含多個IP [ X-Forwarded-For: client1, proxy1, proxy2, ... ] ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/nginx-log_format%E9%85%8D%E7%BD%AE/100_hud639c4e125de7e8ad17e2519279d4fee_29636_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/nginx-log_format%E9%85%8D%E7%BD%AE/","title":"Nginx-log_format配置"},{"content":"PageSpeed模組(自動優化網站動態)下載 wget https://github.com/apache/incubator-pagespeed-ngx/archive/v1.13.35.2-stable.tar.gz tar zxvf v1.13.35.2-stable.tar.gz cd incubator-pagespeed-ngx-1.13.35.2-stable #這一步一定要做 不然nginx會無法加入模組 解壓縮會在根目錄下生成一個psol的資料夾 (解壓後將psol/放到incubator-pagespeed-ngx-1.13.35.2-stable/裡) cat PSOL_BINARY_URL wget https://dl.google.com/dl/page-speed/psol/1.13.35.2-x64.tar.gz tar zxvf 1.13.35.2-x64.tar.gz cd ../ mv incubator-pagespeed-ngx-1.13.35.2-stable /usr/local/incubator-pagespeed-ngx-1.13.35.2-stable/ nginx-http-concat模組(合併HTTP請求)下載 wget https://github.com/alibaba/nginx-http-concat/archive/1.2.2.tar.gz tar zxvf 1.2.2.tar.gz mv nginx-http-concat-1.2.2/ /usr/local/nginx-http-concat/ nginx編譯安裝 cd nginx-1.21.6/ ./configure --user=nginx --group=nginx --prefix=/usr/local/web/nginx --sbin-path=/usr/local/web/nginx/sbin/nginx --conf-path=/usr/local/web/nginx/conf/nginx.conf --error-log-path=/usr/local/web/nginx/logs/error.log --http-log-path=/usr/local/web/nginx/logs/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/subsys/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-pcre --with-http_realip_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_secure_link_module --with-http_v2_module --with-http_stub_status_module --with-http_sub_module --add-module=/usr/local/incubator-pagespeed-ngx-1.13.35.2-stable/ --add-module=/usr/local/nginx-http-concat/ make \u0026amp;\u0026amp; make install (重新編譯的話不需要make install) [重新編譯執行以下步驟] /usr/local/web/nginx/sbin/nginx -s stop cp /usr/local/nginx/sbin/nginx/ /usr/local/nginx/sbin/nginx.bak cp /root/installation/nginx-1.21.6/objs/nginx /usr/local/nginx/sbin/nginx 檢查是否有加入模組 /usr/local/web/nginx/sbin/nginx -V nginx.conf設定檔新增pagespeed配置 http區段加入 pagespeed on; pagespeed FileCachePath /var/cache/nginx/ngx_pagespeed_cache; server區段加入 # Rewrite Level pagespeed RewriteLevel CoreFilters; # Minimize and optimize HTTP requests pagespeed EnableFilters rewrite_css; pagespeed EnableFilters rewrite_javascript; pagespeed EnableFilters combine_css; pagespeed EnableFilters combine_javascript; pagespeed EnableFilters inline_css; pagespeed CssInlineMaxBytes 4096; pagespeed EnableFilters inline_javascript; pagespeed JsInlineMaxBytes 4096; # Image Optimization and lazy load pagespeed EnableFilters rewrite_images; pagespeed EnableFilters inline_images; pagespeed EnableFilters resize_images; pagespeed EnableFilters recompress_images; # Controlling the use of beacons pagespeed AvoidRenamingIntrospectiveJavascript off; pagespeed CriticalImagesBeaconEnabled false; location ~ \u0026quot;\\.pagespeed\\.([a-z]\\.)?[a-z]{2}\\.[^.]{10}\\.[^.]+\u0026quot; { add_header \u0026quot;\u0026quot; \u0026quot;\u0026quot;; } location ~ \u0026quot;^/pagespeed_static/\u0026quot; { } location ~ \u0026quot;^/ngx_pagespeed_beacon$\u0026quot; { } 重啟nginx /usr/local/web/nginx/sbin/nginx -s reload ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/nginx-%E5%8A%A0%E5%85%A5pagespeed%E6%A8%A1%E7%B5%84%E5%8F%8Anginx-http-concat/100_hud639c4e125de7e8ad17e2519279d4fee_29636_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/nginx-%E5%8A%A0%E5%85%A5pagespeed%E6%A8%A1%E7%B5%84%E5%8F%8Anginx-http-concat/","title":"Nginx-加入PageSpeed模組及nginx-http-concat"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 ########################################################################### 統計IP訪問量 awk \u0026#39;{print $l}\u0026#39; /var/log/nginx-access.log | sort -n | uniq | wc -l 查看某一時間段IP的訪問量 grep \u0026#34;14/Jul/2021:0[2-10]\u0026#34; /var/log/nginx-access.log | awk \u0026#39;{print $l}\u0026#39; | sort | uniq -c | sort -nr | wc -l 查看訪問次數最頻繁的前100個IP awk \u0026#39;{print $l}\u0026#39; /var/log/nginx-access.log | sort -n | uniq -c | sort -rn | head -n 100 查看訪問次數100以上的IP awk \u0026#39;{print $l}\u0026#39; /var/log/nginx-access.log |sort -n |uniq -c |awk \u0026#39;{if($l \u0026gt;100) print $0 } \u0026#39; | sort -rn 查詢某個IP的詳細訪問情況,按訪問頻率排序 grep \u0026#39;172.16.0.6\u0026#39; /var/log/nginx-access.log |awk \u0026#39;{print $7}\u0026#39;|sort |uniq -c |sort -rn |head -n 100 ########################################################################### 頁面訪問統計 ########################################################################### 查看訪問最頻繁的頁面 awk \u0026#39;{print $7}\u0026#39; /var/log/nginx-access.log | sort | uniq -c | sort -rn | head -n 100 查看訪問最頻繁的頁面(排除PHP頁面) grep -v \u0026#34;.php\u0026#34; /var/log/nginx-access.log |awk \u0026#39;{print $7}\u0026#39;|sort|uniq -c|sort -rn|head -n 100 查看頁面訪問次數超過100的頁面 cat /var/log/nginx-access.log | cut -d \u0026#39;\u0026#39; -f 7 | sort | uniq -c | awk \u0026#39;(if ($l \u0026gt;100) print $0}\u0026#39; | less 查看最近1000條紀錄,訪問量最高的頁面 tail -1000 /var/log/nginx-access.log | awk \u0026#39;{print $7} \u0026#39; |sort|uniq -c|sort -nr|less ########################################################################### 每秒請求量統計 awk \u0026#39;{print $4}\u0026#39; /var/log/nginx-access.log |cut -c 14-21|sort|uniq -c|sort -nr|head -n 100 每分鐘請求統計 awk \u0026#39;{print $4}\u0026#39; /var/log/nginx-access.log|cut -c 14-18|sort|uniq -c|sort -nr|head -n 100 每小時請求統計 awk \u0026#39;{print $4}\u0026#39; /var/log/nginx-access.log |cut -c 14-15|sort|uniq -c|sort -nr|head -n 100 ########################################################################### 性能分析 ########################################################################### 列出傳輸時間超過3秒的頁面,顯示前20條 cat /var/log/nginx-access.log |awk \u0026#39;($NF \u0026gt; 3){print $7}\u0026#39;|sort -n|uniq -c|sort -nr|head -20 列出PHP頁面請求時間超過3秒的頁面,並統計其出現的次數,顯示前100條 cat /var/log/nginx-access.log|awk \u0026#39;($NF \u0026gt; 1 \u0026amp;\u0026amp; $7~/\\.php/){print $7}\u0026#39;|sort -n|uniq -c|sort -nr|head -100 ########################################################################### 蜘蛛抓取統計 ########################################################################### 統計蜘蛛抓取次數 grep \u0026#39;Baiduspider\u0026#39; /var/log/nginx-access.log |wc -l 統計蜘蛛抓取404的次數 grep \u0026#39;Baiduspider\u0026#39; /var/log/nginx-access.log | grep \u0026#39;404\u0026#39; |wc -l ########################################################################### TCP連接統計 ########################################################################### 查看當前TCP連接數 netstat -tan | grep \u0026#34;ESTABLISHED\u0026#34; | grep \u0026#34;:80\u0026#34; | wc -l 用 Tcpdump 嗅探80端口的訪問看誰高 tcpdump -i enp0s3 -tnn dst port 80 -c 1000 | awk -F\u0026#34;.\u0026#34; \u0026#39;{print $1\u0026#34;.\u0026#34;$2\u0026#34;.\u0026#34;$3\u0026#34;.\u0026#34;$4}\u0026#39; | sort | uniq -c | sort -nr ########################################################################### head -5 # 前五行LOG 數據 sort -k 1nr\t# 按照第一個字段 , 數值排序 , 且為逆序 ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/nginx-%E5%B8%B8%E7%94%A8%E7%9A%84log%E6%90%9C%E7%B4%A2%E6%8C%87%E4%BB%A4/100_hud639c4e125de7e8ad17e2519279d4fee_29636_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/nginx-%E5%B8%B8%E7%94%A8%E7%9A%84log%E6%90%9C%E7%B4%A2%E6%8C%87%E4%BB%A4/","title":"Nginx-常用的LOG搜索指令"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 首先需要建立一個密碼檔, 裡面包含了使用者名稱, 以及加密了的密碼, 如果系統有安裝 Apache, 可以用以下語法建立密碼檔: htpasswd -c /path/to/file/.htpasswd username 但如果沒有 htpasswd 指令可以使用, 那便要手動建立密碼檔, 但也是很簡單的。密碼檔的格式如下: username 是使用者名稱, 可以自行定義, 而 encrypted-password 則是加密的密碼, username:encrypted-password:comment 建立密碼檔: vim /home/opencli/.htpasswd 將要設定的使用者名稱及上面的加密密碼複製到檔案, 即以下格式: username:saoYYKpu2QSsA 現在開啟 Nginx 的設定檔設定, 以下假設檔案在 /etc/nginx/conf.d/default.conf: vim /etc/nginx/conf.d/default.conf 假設我要設定密碼保護的目錄是 /usr/share/nginx/html/admin, 在 server 段落加入以下幾行: location /admin/ { auth_basic \u0026#34;Restricted\u0026#34;; auth_basic_user_file /home/opencli/.htpasswd; } 儲存檔案後需要重新啟動 Nginx: systemctl restart nginx ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/nginx-%E8%A8%AD%E5%AE%9A%E7%9B%AE%E9%8C%84%E5%AF%86%E7%A2%BC%E4%BF%9D%E8%AD%B7/100_hud639c4e125de7e8ad17e2519279d4fee_29636_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/nginx-%E8%A8%AD%E5%AE%9A%E7%9B%AE%E9%8C%84%E5%AF%86%E7%A2%BC%E4%BF%9D%E8%AD%B7/","title":"Nginx-設定目錄密碼保護"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 ########################################################################## 重新編譯 cd nginx-1.21.6/ ./configure --user=nginx --group=nginx --prefix=/usr/local/nginx --sbin-path=/usr/local/nginx/sbin/nginx --conf-path=/usr/local/nginx/conf/nginx.conf --error-log-path=/usr/local/nginx/logs/error.log --http-log-path=/usr/local/nginx/logs/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/subsys/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-pcre --with-debug make 不要做 make install ########################################################################## 停 Nginx /usr/local/web/nginx/sbin/nginx -s stop 備份舊的nginx程式 cp /usr/local/web/nginx/sbin/nginx/ /usr/local/web/nginx/sbin/nginx.bak 把新的nginx程式覆蓋舊的 cp /root/installation/nginx-1.21.6/objs/nginx /usr/local/web/nginx/sbin/nginx 檢視ngixn版本極其編譯引數 /usr/local/web/nginx/sbin/nginx -V 測試新的nginx程式是否正確 /usr/local/web/nginx/sbin/nginx -t 平滑重啟nginx /usr/local/web/nginx/sbin/nginx -s reload ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/nginx-%E9%87%8D%E6%96%B0%E7%B7%A8%E8%AD%AF/100_hud639c4e125de7e8ad17e2519279d4fee_29636_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/nginx-%E9%87%8D%E6%96%B0%E7%B7%A8%E8%AD%AF/","title":"Nginx-重新編譯"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 安裝依賴 wget ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/attic/libmcrypt/libmcrypt-2.5.7.tar.gz tar -zxvf libmcrypt-2.5.7.tar.gz cd libmcrypt-2.5.7 ./configure --prefix=/usr/local make \u0026amp; make install yum -y install gcc gcc-c++ make cmake automake autoconf kernel-devel ncurses-devel libxml2-devel openssl-devel curl-devel libjpeg-devel libpng-devel pcre-devel libtool libtool-libs freetype-devel gd zlib-devel file bison patch mlocate flex diffutils readline-devel glibc-devel glib2-devel bzip2-devel gettext-devel libcap-devel openldap openldap-devel libxslt-devel sqlite-devel yum install mysql-devel [官網安裝tar包](https://www.php.net/releases/index.php) vim /etc/ld.so.conf.d/local.conf /usr/local/lib # 添加该行 , 如果不行 , 则用/usr/local/lib64 :wq ldconfig -v # 使之生效 ######################################## cp -frp /usr/lib64/libldap* /usr/lib/ ln -s /usr/lib64/liblber* /usr/lib/ ######################################## tar -zxvf php-7.0.1.tar.gz \u0026#39;./configure\u0026#39; \u0026#39;--prefix=/usr/local/web/php\u0026#39; \u0026#39;--with-config-file-path=/usr/local/web/php/etc\u0026#39; \u0026#39;--with-mysqli=/usr/bin/mysql_config\u0026#39; \u0026#39;--with-iconv-dir=/usr/local\u0026#39; \u0026#39;--with-freetype-dir\u0026#39; \u0026#39;--with-jpeg-dir\u0026#39; \u0026#39;--with-png-dir\u0026#39; \u0026#39;--with-zlib\u0026#39; \u0026#39;--with-libxml-dir=/usr\u0026#39; \u0026#39;--enable-xml\u0026#39; \u0026#39;--disable-rpath\u0026#39; \u0026#39;--enable-bcmath\u0026#39; \u0026#39;--enable-shmop\u0026#39; \u0026#39;--enable-sysvsem\u0026#39; \u0026#39;--enable-inline-optimization\u0026#39; \u0026#39;--with-curl\u0026#39; \u0026#39;--enable-mbregex\u0026#39; \u0026#39;--enable-fpm\u0026#39; \u0026#39;--enable-mbstring\u0026#39; \u0026#39;--with-mcrypt\u0026#39; \u0026#39;--with-gd\u0026#39; \u0026#39;--enable-gd-native-ttf\u0026#39; \u0026#39;--with-openssl\u0026#39; \u0026#39;--with-mhash\u0026#39; \u0026#39;--enable-pcntl\u0026#39; \u0026#39;--enable-sockets\u0026#39; \u0026#39;--with-ldap\u0026#39; \u0026#39;--with-ldap-sasl\u0026#39; \u0026#39;--with-xmlrpc\u0026#39; \u0026#39;--enable-zip\u0026#39; \u0026#39;--enable-soap\u0026#39; \u0026#39;--enable-opcache\u0026#39; \u0026#39;--enable-ftp\u0026#39; vim Makefile \u0026gt;\u0026gt;\u0026gt;EXTRA_LIBS = ... -lcrypt -llber -liconv make \u0026amp; make test \u0026amp; make install ######################################## cp php.ini-production /usr/local/web/php/etc/php.ini cp sapi/fpm/php-fpm.service /usr/lib/systemd/system/ cp /usr/local/web/php/etc/php-fpm.conf.default /usr/local/web/php/etc/php-fpm.conf cp /usr/local/web/php/etc/php-fpm.d/www.conf.default /usr/local/web/php/etc/php-fpm.d/www.conf ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/php-%E4%BD%BF%E7%94%A8tarball%E5%AE%89%E8%A3%9D/100_hu2ca637fb1d0a70ad637da30e1c6e56b4_46154_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/php-%E4%BD%BF%E7%94%A8tarball%E5%AE%89%E8%A3%9D/","title":"PHP-使用TARBALL安裝"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 安装必要 yum -y install gcc gcc-c++ 要安装PHP 7，使用以下命令在CentOS 7系统上安装和启用EPEL和Remi存储库。 yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm 安装yum-utils，这是一组用于管理yum存储库和包的有用程序。它有基本上扩展yum默认功能的工具。 它可用于管理（启用或禁用）yum存储库以及包，无需任何手动配置等等#yum -y install yum-utils yum-utils提供的程序之一是yum-config-manager，使用它来启用Remi存储库作为安装不同PHP版本的默认存储库 yum-config-manager --enable remi-php71 [ 安装PHP 7.1 ] yum-config-manager --enable remi-php72 [ 安装PHP 7.2 ] yum-config-manager --enable remi-php73 [ 安装PHP 7.3 ] 使用以下命令安装PHP 7以及所有必需的模块。 yum -y install php php-mcrypt php-devel php-cli php-gd php-pear php-curl php-fpm php-mysql php-ldap php-zi 查看php版本 [root@VM_159_140_centos lnmp]# php -v ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/php-%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%9D/100_hu2ca637fb1d0a70ad637da30e1c6e56b4_46154_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/php-%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%9D/","title":"PHP-使用YUM安裝"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 ################################### Centos7 配置php-fpm服务到systemctl ################################### vim /usr/local/php/etc/php-fpm.conf ################################### ; Pid file ; Note: the default prefix is /usr/local/php/var ; Default Value: none pid = /var/run/php-fpm.pid ################################### touch /usr/lib/systemd/system/php-fpm.service ################################### vim /usr/lib/systemd/system/php-fpm.service ################################### [Unit] Description=The PHP FastCGI Process Manager After=syslog.target network.target [Service] Type=forking PIDFile=/var/run/php-fpm.pid ExecStart=/usr/local/php/sbin/php-fpm ExecReload=/bin/kill -USR2 $MAINPID PrivateTmp=true [Install] WantedBy=multi-user.target ################################### systemctl daemon-reload ################################### ps aux|grep php-fpm ################################### kill -9 ################################### systemctl start php-fpm ################################### ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/php-%E6%B7%BB%E5%8A%A0%E5%88%B0linux%E7%B3%BB%E7%B5%B1%E5%95%9F%E5%8B%95/100_hu2ca637fb1d0a70ad637da30e1c6e56b4_46154_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/php-%E6%B7%BB%E5%8A%A0%E5%88%B0linux%E7%B3%BB%E7%B5%B1%E5%95%9F%E5%8B%95/","title":"PHP-添加到LINUX系統啟動"},{"content":"# yum -y update # yum -y install vim wget # yum -y install python-setuptools # easy_install pip # yum -y install make gcc gcc-c++ # yum -y install zlib-devel # yum -y install readline* # yum -y install openssl-devel # yum -y install tk-devel # yum -y install sqlite-devel $ wget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz $ tar -zxvf Python-3.6.3.tgz $ cd Python-3.6.3 $ ./configure --enable-loadable-sqlite-extensions $ make $ sudo make install # mv /usr/bin/python /usr/bin/python.bak # ln -s /usr/local/bin/python3 /usr/bin/python # vim /usr/bin/yum # vim /usr/libexec/urlgrabber-ext-down # vim /usr/bin/firewall-cmd # vim /usr/sbin/firewalld 註：被​將每個文件的第一句話 #!/usr/bin/python 改為 #!/usr/bin/python2.7，保存退出即可 # service firewalld restart # service firewalld status # pip install [packages] ex: numpy、scipy、matplotlib、scikit-learn... ERR: Command \u0026quot;python setup.py egg_info\u0026quot; failed with error code 1 in /tmp/pip-build-j_ho_m/setuptools/ pip3 install --upgrade setuptools 載不下來可以添加參數 XXX --use-deprecated=backtrack-on-build-failures curl https://bootstrap.pypa.io/get-pip.py \u0026gt; get-pip.py python get-pip.py pip -V , pip3 -V ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/python2.7-%E5%8D%87%E7%B4%9A%E6%88%90-python3.6/100_hu1acf48b62c2e007a3a704d91e9dd9674_43864_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/python2.7-%E5%8D%87%E7%B4%9A%E6%88%90-python3.6/","title":"Python2.7 升級成 Python3.6"},{"content":"--------------------------------------- SVN綠色勾勾消失 1. Win + R \u0026gt;\u0026gt; regedit \u0026gt;\u0026gt; HKEY_LOCAL_MACHINE-\u0026gt;SOFTWARE-\u0026gt;Microsoft-\u0026gt;Windows-\u0026gt;CurrentVersion-\u0026gt;Explorer-\u0026gt;ShellIconOverlayIdentifiers 2. 查看註冊表中是否有Tortoisesvn相關選項，如果有，將Tortoisesvn相關移到最前端，將首字母改爲數字，或者空格 (如果註冊表中沒有Tortoisesvn相關，則將Tortoisesvn導入到註冊表，具體內容爲： Windows Registry Editor Version 5.00) [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\1TortoiseNormal] @=\u0026quot;{C5994560-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\2TortoiseModified] @=\u0026quot;{C5994561-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\3TortoiseConflict] @=\u0026quot;{C5994562-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\4TortoiseLocked] @=\u0026quot;{C5994563-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\5TortoiseReadOnly] @=\u0026quot;{C5994564-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\6TortoiseDeleted] @=\u0026quot;{C5994565-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\7TortoiseAdded] @=\u0026quot;{C5994566-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\8TortoiseIgnored] @=\u0026quot;{C5994567-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\9TortoiseUnversioned] @=\u0026quot;{C5994568-53D9-4125-87C9-F193FC689CB2}\u0026quot; [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\Offline Files] @=\u0026quot;{750fdf0e-2a26-11d1-a3ea-080036587f03}\u0026quot; 將上面內容保存到svn.reg文件中，然後導入註冊表 3. 重啓Explorer CND : taskkill /f /im explorer.exe \u0026gt; start explorer.exe PW : stop-process -name explorer -force ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/svn-%E7%B6%A0%E8%89%B2%E5%8B%BE%E5%8B%BE%E6%B6%88%E5%A4%B1/100_hu94ffa1f3b0268ddc6594e8f513862b5b_33594_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/svn-%E7%B6%A0%E8%89%B2%E5%8B%BE%E5%8B%BE%E6%B6%88%E5%A4%B1/","title":"SVN-綠色勾勾消失"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 XEN-center \u0026gt;\u0026gt; storage \u0026gt;\u0026gt; ADD disk 新增30G 查看各區硬碟 df -h 查看總硬碟有無新增30G fdisk -l 檢視已經存在的pv（物理卷） pvdisplay 檢視當前已經存在的vg（邏輯卷組） vgdisplay 檢視已經存在的lv（邏輯卷） lvdisplay 把/dev/xvdb加入與/目錄相同的vg（邏輯卷組） vgextend centos /dev/xvdb 擴容lv（邏輯卷） lvextend -L +30.0GB -n /dev/mapper/centos-root 使其生效 xfs_growfs /dev/mapper/centos-root df -h ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/xenserver-%E6%93%B4%E5%85%85root%E7%A3%81%E5%8D%80/100_hu442ea9164a062f86740540d4232db639_41801_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/xenserver-%E6%93%B4%E5%85%85root%E7%A3%81%E5%8D%80/","title":"XenServer-擴充root磁區"},{"content":" 1 開啟windoes元件 \u0026lt;\u0026lt; samba ","date":"2022-08-03T00:00:00Z","image":"https://note.laurance.ml/p/xenserver-%E7%84%A1%E6%B3%95%E5%82%B3iso%E6%98%A0%E5%83%8F%E6%AA%94/100_hu442ea9164a062f86740540d4232db639_41801_120x120_fill_box_smart1_3.png","permalink":"https://note.laurance.ml/p/xenserver-%E7%84%A1%E6%B3%95%E5%82%B3iso%E6%98%A0%E5%83%8F%E6%AA%94/","title":"XenServer-無法傳ISO映像檔"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://note.laurance.ml/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://note.laurance.ml/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode bilibilibi Shortcode Gist Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2019-03-10T00:00:00Z","permalink":"https://note.laurance.ml/p/rich-content/","title":"Rich Content"},{"content":"فقرة 1 هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق. إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسما ولا يحوي أخطاء لغوية، مولد النص العربى مفيد لمصممي المواقع على وجه الخصوص، حيث يحتاج العميل فى كثير من الأحيان أن يطلع على صورة حقيقية لتصميم الموقع. ومن هنا وجب على المصمم أن يضع نصوصا مؤقتة على التصميم ليظهر للعميل الشكل كاملاً،دور مولد النص العربى أن يوفر على المصمم عناء البحث عن نص بديل لا علاقة له بالموضوع الذى يتحدث عنه التصميم فيظهر بشكل لا يليق. هذا النص يمكن أن يتم تركيبه على أي تصميم دون مشكلة فلن يبدو وكأنه نص منسوخ، غير منظم، غير منسق، أو حتى غير مفهوم. لأنه مازال نصاً بديلاً ومؤقتاً.\nفقرة 2 هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق. إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسما ولا يحوي أخطاء لغوية، مولد النص العربى مفيد لمصممي المواقع على وجه الخصوص، حيث يحتاج العميل فى كثير من الأحيان أن يطلع على صورة حقيقية لتصميم الموقع. ومن هنا وجب على المصمم أن يضع نصوصا مؤقتة على التصميم ليظهر للعميل الشكل كاملاً،دور مولد النص العربى أن يوفر على المصمم عناء البحث عن نص بديل لا علاقة له بالموضوع الذى يتحدث عنه التصميم فيظهر بشكل لا يليق. هذا النص يمكن أن يتم تركيبه على أي تصميم دون مشكلة فلن يبدو وكأنه نص منسوخ، غير منظم، غير منسق، أو حتى غير مفهوم. لأنه مازال نصاً بديلاً ومؤقتاً.\nتجربة RTL كلمة 1 Text كلمة 2\n","date":"2019-03-09T00:00:00Z","image":"https://note.laurance.ml/p/%D9%85%D8%AB%D8%A7%D9%84-%D9%86%D8%B5/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/%D9%85%D8%AB%D8%A7%D9%84-%D9%86%D8%B5/","title":"مثال نص"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://note.laurance.ml/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://note.laurance.ml/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://note.laurance.ml/p/emoji-support/","title":"Emoji Support"}]